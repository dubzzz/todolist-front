{"version":3,"sources":["../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","component/list/TodoItem.tsx","component/list/TodoList.tsx","component/list/ListPage.tsx"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","default","_react","_default","createElement","d","SwitchBase_SwitchBase","react_default","a","forwardRef","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","classNameProp","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","other","objectWithoutProperties","isControlled","useRef","current","_React$useState","useState","Boolean","_React$useState2","esm_slicedToArray","checkedState","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","esm_extends","component","clsx_m","root","role","undefined","event","input","target","internal_SwitchBase","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","_props$checkedIcon","_props$color","color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","concat","helpers","data-indeterminate","esm_Checkbox_Checkbox","theme","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","useStyles","makeStyles","paper","spacing","TodoItem","todo","state","TodoState","Noop","Paper","data","done","toggle","aria-label","style","textDecoration","Remove","task","CircularProgress","visibility","size","float","onClick","remove","Delete_default","TodoList","_useTodoList","useTodoList","ready","todos","addTodo","toggleTodo","removeTodo","_useState","_useState2","slicedToArray","newTodo","setNewTodo","display","marginBottom","TextField","label","p","currentTarget","onKeyPress","ev","which","preventDefault","flexGrow","Button","map","t","key","guid","ListPage","__webpack_exports__"],"mappings":"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","file":"static/js/5.75edfd36.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checkedState = _React$useState2[0],\n      setCheckedState = _React$useState2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, classNameProp, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), checked ? checkedIcon : icon, React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React from 'react';\r\nimport { TodoType, TodoState } from '../../context/TodoListContext';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: { padding: theme.spacing(2), margin: 'auto' }\r\n}));\r\n\r\ntype Props = { todo: TodoType; toggle: () => void; remove: () => void };\r\n\r\nexport default function TodoItem(props: Props) {\r\n  const classes = useStyles();\r\n  const disabled = props.todo.state !== TodoState.Noop;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Checkbox\r\n        disabled={disabled}\r\n        checked={props.todo.data.done}\r\n        onChange={() => props.toggle()}\r\n        inputProps={{\r\n          'aria-label': 'primary checkbox'\r\n        }}\r\n      />\r\n      <span\r\n        style={{\r\n          textDecoration: props.todo.state === TodoState.Remove ? 'line-through' : 'none',\r\n          color: disabled ? 'grey' : 'black'\r\n        }}\r\n      >\r\n        {props.todo.data.task}\r\n      </span>\r\n      <CircularProgress\r\n        style={{ margin: '1em', visibility: props.todo.state === TodoState.Noop ? 'hidden' : 'visible' }}\r\n        size={12}\r\n      />\r\n      <IconButton style={{ float: 'right' }} aria-label=\"delete\" disabled={disabled} onClick={() => props.remove()}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useTodoList } from '../../context/TodoListContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TodoItem from './TodoItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ntype Props = {};\r\n\r\nexport default function TodoList(props: Props) {\r\n  const { ready, todos, addTodo, toggleTodo, removeTodo } = useTodoList();\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', marginBottom: '1em' }}>\r\n        <TextField\r\n          label=\"Add a new todo\"\r\n          value={newTodo}\r\n          onChange={p => setNewTodo(p.currentTarget.value)}\r\n          onKeyPress={ev => {\r\n            if (ev.which === 13 && newTodo !== '') {\r\n              addTodo(newTodo);\r\n              setNewTodo('');\r\n              ev.preventDefault();\r\n            }\r\n          }}\r\n          style={{ flexGrow: 1 }}\r\n        />\r\n        <Button\r\n          disabled={newTodo === ''}\r\n          onClick={() => {\r\n            addTodo(newTodo);\r\n            setNewTodo('');\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n      {ready ? (\r\n        <div>\r\n          {todos.map(t => (\r\n            <TodoItem\r\n              key={t.data.guid}\r\n              todo={t}\r\n              toggle={() => toggleTodo(t.data.guid)}\r\n              remove={() => removeTodo(t.data.guid)}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TodoList from './TodoList';\r\n\r\ntype Props = {};\r\n\r\nexport default function ListPage(props: Props) {\r\n  return <TodoList />;\r\n}\r\n"],"sourceRoot":""}