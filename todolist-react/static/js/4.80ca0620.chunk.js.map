{"version":3,"sources":["context/TodoListContext.tsx","component/list/TodoItem.tsx","component/list/TodoList.tsx","component/list/ListPage.tsx"],"names":["TodoState","defaultTodoList","TodoListContext","createContext","TodoListProvider","props","_useState","useState","_useState2","Object","slicedToArray","ready","setReady","_useState3","_useState4","todos","setTodos","useEffect","handle","Api","newTodos","ts","todosBeingAdded","filter","t","state","Add","reduce","acc","objectSpread","defineProperty","data","guid","todosBeingEdited","Edit","todosBeingRemoved","Remove","undefined","map","Noop","concat","react_default","a","createElement","Provider","assign","value","addTodo","task","Math","random","toString","substr","todo","done","toConsumableArray","then","r","console","error","toggleTodo","prevTodo","find","Error","removeTodo","useStyles","makeStyles","theme","paper","padding","spacing","margin","TodoItem","classes","disabled","Paper","className","Checkbox","checked","onChange","toggle","inputProps","aria-label","style","textDecoration","color","CircularProgress","visibility","size","IconButton","float","onClick","remove","Delete_default","TodoList","_useTodoList","context","useContext","useTodoList","newTodo","setNewTodo","TextField","label","p","currentTarget","onKeyPress","ev","which","preventDefault","Button","key","__webpack_require__","d","__webpack_exports__","ListPage","root","flexGrow","menuButton","marginRight","title","content","height","overflow","_useAuthentification","useAuthentification","username","logout","CssBaseline","AppBar","position","Toolbar","Typography","variant","PowerSettingsNew_default"],"mappings":"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","file":"static/js/4.80ca0620.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport * as Api from '../api';\r\n\r\nexport enum TodoState {\r\n  Noop = 'noop',\r\n  Add = 'add',\r\n  Edit = 'edit',\r\n  Remove = 'remove'\r\n}\r\nexport type TodoType = {\r\n  data: Api.Todo;\r\n  state: TodoState;\r\n};\r\nexport type TodoListContextType = {\r\n  ready: boolean;\r\n  todos: TodoType[];\r\n  addTodo: (task: string) => void;\r\n  toggleTodo: (guid: string) => void;\r\n  removeTodo: (guid: string) => void;\r\n};\r\n\r\nconst defaultTodoList = {} as TodoListContextType;\r\nconst TodoListContext = createContext(defaultTodoList);\r\n\r\nexport function TodoListProvider<TProps>(props: TProps) {\r\n  const [ready, setReady] = useState(false);\r\n  const [todos, setTodos] = useState([] as TodoType[]);\r\n\r\n  useEffect(() => {\r\n    const listener = (newTodos: Api.Todo[]) => {\r\n      setReady(true);\r\n      setTodos(ts => {\r\n        const todosBeingAdded: { [guid: string]: Api.Todo } = ts\r\n          .filter(t => t.state === TodoState.Add)\r\n          .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n        const todosBeingEdited: { [guid: string]: Api.Todo } = ts\r\n          .filter(t => t.state === TodoState.Edit)\r\n          .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n        const todosBeingRemoved: { [guid: string]: Api.Todo } = ts\r\n          .filter(t => t.state === TodoState.Remove)\r\n          .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n\r\n        return newTodos\r\n          .filter(t => todosBeingAdded[t.guid] === undefined)\r\n          .map(t => {\r\n            // Remove, Edit and Noop\r\n            if (todosBeingEdited[t.guid]) return { state: TodoState.Edit, data: todosBeingEdited[t.guid] };\r\n            if (todosBeingRemoved[t.guid]) return { state: TodoState.Remove, data: todosBeingRemoved[t.guid] };\r\n            return { state: TodoState.Noop, data: t };\r\n          })\r\n          .concat(ts.filter(t => t.state === TodoState.Add)); // Add\r\n      });\r\n    };\r\n    const handle = Api.addTodoListener(listener);\r\n    return () => Api.removeTodoListener(handle);\r\n  }, []);\r\n\r\n  const addTodo = (task: string) => {\r\n    const guid = Math.random()\r\n      .toString(16)\r\n      .substr(2);\r\n    const todo = { guid, task, done: false };\r\n\r\n    setTodos(ts => [...ts, { state: TodoState.Add, data: todo }]);\r\n    Api.addTodo(todo).then(r => {\r\n      if (!r) {\r\n        console.error('Failed to add todo:', todo);\r\n        setTodos(ts => ts.filter(t => t.data.guid !== guid));\r\n      } else {\r\n        // We apply the modification\r\n        setTodos(ts => ts.map(t => (t.data.guid === guid ? { state: TodoState.Noop, data: todo } : t)));\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggleTodo = (guid: string) => {\r\n    const prevTodo = todos.find(t => t.data.guid === guid && t.state === TodoState.Noop);\r\n    if (!prevTodo) throw new Error(`No todo available for modification given guid ${guid}`);\r\n\r\n    const todo = { ...prevTodo.data, done: !prevTodo.data.done };\r\n\r\n    setTodos(ts => ts.map(t => (t.data.guid === guid ? { state: TodoState.Edit, data: todo } : t)));\r\n    Api.editTodo(todo).then(r => {\r\n      if (!r) {\r\n        console.error('Failed to edit todo:', todo);\r\n        setTodos(ts => ts.map(t => (t.data.guid === guid ? prevTodo : t)));\r\n      } else {\r\n        // We apply the modification\r\n        setTodos(ts => ts.map(t => (t.data.guid === guid ? { state: TodoState.Noop, data: todo } : t)));\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeTodo = (guid: string) => {\r\n    const prevTodo = todos.find(t => t.data.guid === guid && t.state === TodoState.Noop);\r\n    if (!prevTodo) throw new Error(`No todo available for modification given guid ${guid}`);\r\n\r\n    setTodos(ts => ts.map(t => (t.data.guid === guid ? { state: TodoState.Remove, data: prevTodo.data } : t)));\r\n    Api.removeTodo(prevTodo.data).then(r => {\r\n      if (!r) {\r\n        console.error('Failed to remove todo:', prevTodo.data);\r\n        setTodos(ts => ts.map(t => (t.data.guid === guid ? prevTodo : t)));\r\n      } else {\r\n        // We apply the modification\r\n        setTodos(ts => ts.filter(t => t.data.guid !== guid));\r\n      }\r\n    });\r\n  };\r\n\r\n  return <TodoListContext.Provider value={{ ready, todos, addTodo, toggleTodo, removeTodo }} {...props} />;\r\n}\r\n\r\nexport function useTodoList() {\r\n  const context = useContext(TodoListContext);\r\n  if (context === defaultTodoList) {\r\n    throw new Error(`useTodoList must be used within a TodoListProvider`);\r\n  }\r\n  return context;\r\n}\r\n","import React from 'react';\r\nimport { TodoType, TodoState } from '../../context/TodoListContext';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: { padding: theme.spacing(2), margin: 'auto' }\r\n}));\r\n\r\ntype Props = { todo: TodoType; toggle: () => void; remove: () => void };\r\n\r\nexport default function TodoItem(props: Props) {\r\n  const classes = useStyles();\r\n  const disabled = props.todo.state !== TodoState.Noop;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Checkbox\r\n        disabled={disabled}\r\n        checked={props.todo.data.done}\r\n        onChange={() => props.toggle()}\r\n        inputProps={{\r\n          'aria-label': 'primary checkbox'\r\n        }}\r\n      />\r\n      <span\r\n        style={{\r\n          textDecoration: props.todo.state === TodoState.Remove ? 'line-through' : 'none',\r\n          color: disabled ? 'grey' : 'black'\r\n        }}\r\n      >\r\n        {props.todo.data.task}\r\n      </span>\r\n      <CircularProgress\r\n        style={{ margin: '1em', visibility: props.todo.state === TodoState.Noop ? 'hidden' : 'visible' }}\r\n        size={12}\r\n      />\r\n      <IconButton style={{ float: 'right' }} aria-label=\"delete\" disabled={disabled} onClick={() => props.remove()}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useTodoList } from '../../context/TodoListContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TodoItem from './TodoItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ntype Props = {};\r\n\r\nexport default function TodoList(props: Props) {\r\n  const { ready, todos, addTodo, toggleTodo, removeTodo } = useTodoList();\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <TextField\r\n          label=\"Add a new todo\"\r\n          value={newTodo}\r\n          onChange={p => setNewTodo(p.currentTarget.value)}\r\n          onKeyPress={ev => {\r\n            if (ev.which === 13 && newTodo !== '') {\r\n              addTodo(newTodo);\r\n              setNewTodo('');\r\n              ev.preventDefault();\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          disabled={newTodo === ''}\r\n          onClick={() => {\r\n            addTodo(newTodo);\r\n            setNewTodo('');\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n      {ready ? (\r\n        <div>\r\n          {todos.map(t => (\r\n            <TodoItem\r\n              key={t.data.guid}\r\n              todo={t}\r\n              toggle={() => toggleTodo(t.data.guid)}\r\n              remove={() => removeTodo(t.data.guid)}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAuthentification } from '../../context/AuthentificationContext';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TodoList from './TodoList';\r\nimport { TodoListProvider } from '../../context/TodoListContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    padding: '2em'\r\n  }\r\n}));\r\n\r\ntype Props = {};\r\n\r\nexport default function ListPage(props: Props) {\r\n  const classes = useStyles();\r\n  const { username, logout } = useAuthentification();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Welcome {username}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={() => {\r\n              logout();\r\n            }}\r\n          >\r\n            <PowerSettingsNewIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main className={classes.content}>\r\n        <TodoListProvider>\r\n          <TodoList />\r\n        </TodoListProvider>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}