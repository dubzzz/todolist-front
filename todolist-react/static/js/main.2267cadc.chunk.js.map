{"version":3,"sources":["hoc/Authenticated.tsx","component/login/LoginPage.tsx","App.tsx","serviceWorker.ts","index.tsx","context/AuthenticationContext.tsx","api/index.ts","context/NotificationContext.tsx"],"names":["AuthenticationWrapper","props","useAuthentication","state","AuthenticationState","OnGoingAuthentication","NonAuthenticated","react_default","a","createElement","react_router","to","pathname","search","concat","encodeURIComponent","location","Authenticated","react","fallback","CircularProgress","children","withAuthenticated","WrappedComponent","Wrapper","withRouter","useStyles","makeStyles","cardContainer","padding","textAlign","card","display","maxWidth","hint","fontSize","media","height","classes","_useAuthentication","login","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","canLogin","onGoingLogin","redirect","URLSearchParams","get","className","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","TextField","label","value","onChange","p","currentTarget","onKeyPress","ev","which","preventDefault","type","CardActions","Button","disabled","onClick","size","Fragment","loadAuthenticatedApp","Promise","all","__webpack_require__","e","then","bind","AuthenticatedApp","React","lazy","App","useEffect","NotificationContext","maxNotifications","AuthenticationContext","react_router_dom","exact","path","LoginPage","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","defaultAuthentication","createContext","AuthenticationProvider","_useNotification","useNotification","success","error","Api","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","token","setToken","_useState5","_useState6","authState","setAuthState","checkToken","_ref","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","t0","sent","stop","apply","this","arguments","_ref2","_callee2","user","pass","tokens","_context2","console","abrupt","_x","_x2","react__WEBPACK_IMPORTED_MODULE_3___default","Provider","assign","logout","silent","context","useContext","Error","getValidToken","validToken","failure","readStorage","space","keyName","localStorage","getItem","writeStorage","setItem","clearStorage","removeItem","readTodos","raw","JSON","parse","addTodoListener","fn","connectionLost","handle","_i","detectChanges","_handleId","undefined","newData","_data","length","some","idx","t1","t2","guid","task","done","changeDetected","setTimeout","removeTodoListener","clearTimeout","addTodo","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","todo","data","delay","t","stringify","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","editTodo","map","_x3","_x4","removeTodo","_ref3","_callee3","_context3","filter","_x5","_x6","ms","resolve","reject","out","d","__webpack_exports__","NotificationProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","notistack__WEBPACK_IMPORTED_MODULE_1__","defaultNotification","NotificationProviderInternal","enqueueSnackbar","log","useCallback","msg","info","warning","withSnackbar","maxSnack"],"mappings":"sKAOA,SAASA,EAAsBC,GAE7B,OADkBC,cAAVC,OAEN,KAAKC,IAAoBC,sBACzB,KAAKD,IAAoBE,iBACvB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,SACVC,OAAM,aAAAC,OAAeC,mBAAmBd,EAAMe,SAASJ,cAI/D,KAAKR,IAAoBa,cACvB,OAAOV,EAAAC,EAAAC,cAACS,EAAA,SAAD,CAAUC,SAAUZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,OAAuBnB,EAAMoB,WAIvD,SAASC,EAAqBC,GACnC,IAAMC,EAAUC,YAAWzB,GAC3B,OAAO,SAACC,GAAD,OACLM,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAACc,EAAqBtB,gGCftByB,EAAYC,YAAW,CAC3BC,cAAe,CACbC,QAAS,GACTC,UAAW,UAEbC,KAAM,CACJC,QAAS,eACTC,SAAU,KAEZC,KAAM,CACJC,SAAU,IAEZC,MAAO,CACLC,OAAQ,OAuEGZ,kBAjEf,SAAmBxB,GACjB,IAAMqC,EAAUZ,IADea,EAENrC,cAAjBC,EAFuBoC,EAEvBpC,MAAOqC,EAFgBD,EAEhBC,MAFgBC,EAGCC,mBAAS,IAHVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGxBK,EAHwBH,EAAA,GAGdI,EAHcJ,EAAA,GAAAK,EAICN,mBAAS,IAJVO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIxBE,EAJwBD,EAAA,GAIdE,EAJcF,EAAA,GAMzBG,EAAWjD,IAAUC,IAAoBE,kBAAoBwC,GAAYI,EACzEG,EAAelD,IAAUC,IAAoBC,sBAEnD,GAAIF,IAAUC,IAAoBa,cAAe,CAC/C,IACMqC,EADS,IAAIC,gBAAgBtD,EAAMe,SAASH,QAC1B2C,IAAI,aAAe,IAC3C,OAAOjD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI2C,IAEvB,OACE/C,EAAAC,EAAAC,cAAA,OAAKgD,UAAWnB,EAAQV,eACtBrB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMD,UAAWnB,EAAQP,MACvBxB,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACEF,UAAWnB,EAAQF,MACnBwB,MAAM,4IACNC,MAAM,iBAERtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,6BAGA3D,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAYN,UAAWnB,EAAQJ,KAAMiC,MAAM,gBAAgBH,cAAY,GAAvE,2CAGAzD,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,MAAM,WACNC,MAAOxB,EACPyB,SAAU,SAAAC,GAAC,OAAIzB,EAAYyB,EAAEC,cAAcH,QAC3CI,WAAY,SAAAC,GACO,KAAbA,EAAGC,OAAgBxB,IACrBZ,EAAMM,EAAUI,GAChByB,EAAGE,qBAITtE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,MAAM,WACNS,KAAK,WACLR,MAAOpB,EACPqB,SAAU,SAAAC,GAAC,OAAIrB,EAAYqB,EAAEC,cAAcH,QAC3CI,WAAY,SAAAC,GACO,KAAbA,EAAGC,OAAgBxB,IACrBZ,EAAMM,EAAUI,GAChByB,EAAGE,sBAKXtE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACExE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAQb,MAAM,UAAUc,UAAW7B,EAAU8B,QAAS,kBAAM1C,EAAMM,EAAUI,KAA5E,SAGCG,EAAe9C,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAkB+D,KAAM,KAAS5E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4E,SAAA,WCnFrDC,EAAuB,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,YAC7BC,EAAmBC,IAAMC,KAAKT,GAsBrBU,EApBO,WAIpB,OAHAC,oBAAU,WACRX,KACC,IAED9E,EAAAC,EAAAC,cAAA,OAAKgD,UAAU,OACblD,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAsBC,iBAAkB,GACtC3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACE5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,KACE7F,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO2F,OAAK,EAACC,KAAK,SAASpC,UAAWqC,IACtChG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwD,UAAW5C,EAAkBsE,WCV9BY,QACW,cAA7BC,OAAOzF,SAAS0F,UAEe,UAA7BD,OAAOzF,SAAS0F,UAEhBD,OAAOzF,SAAS0F,SAASC,MACvB,2DCbNC,IAASC,OAAOtG,EAAAC,EAAAC,cAACqG,EAAD,MAASC,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzB,KAAK,SAAA0B,GACjCA,EAAaC,oJEvIPjH,kNAcZ,IAAMkH,EAAwB,GACxBnB,EAAwBoB,wBAAcD,GAErC,SAASE,EAA+BvH,GAAe,IAAAwH,EACjCC,cAAnBC,EADoDF,EACpDE,QAASC,EAD2CH,EAC3CG,MAD2CnF,EAE5BC,mBAAS,kBAAMmF,IAAgB,yBAA0B,cAF7BlF,EAAAC,OAAAkF,EAAA,EAAAlF,CAAAH,EAAA,GAErDK,EAFqDH,EAAA,GAE3CI,EAF2CJ,EAAA,GAAAK,EAGlCN,mBAAS,kBAAMmF,IAAgB,yBAA0B,WAHvB5E,EAAAL,OAAAkF,EAAA,EAAAlF,CAAAI,EAAA,GAGrD+E,EAHqD9E,EAAA,GAG9C+E,EAH8C/E,EAAA,GAAAgF,EAI1BvF,mBAAStC,EAAoBC,uBAJH6H,EAAAtF,OAAAkF,EAAA,EAAAlF,CAAAqF,EAAA,GAIrDE,EAJqDD,EAAA,GAI1CE,EAJ0CF,EAAA,GAM5DlC,oBAAU,WACR,IAAMqC,EAAU,eAAAC,EAAA1F,OAAA2F,EAAA,EAAA3F,CAAA4F,EAAAhI,EAAAiI,KAAG,SAAAC,IAAA,OAAAF,EAAAhI,EAAAmI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAG,GACY,KAAVhB,GADFa,EAAAG,GAAA,CAAAH,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACyBjB,IAAeE,GADxC,OAAAa,EAAAG,GAAAH,EAAAI,KAAA,OAAAJ,EAAAG,IAGflB,IAAiB,yBAA0B,WAAY/E,GACvD+E,IAAiB,yBAA0B,QAASE,GACpDK,EAAahI,EAAoBa,gBAC5BmH,EAAahI,EAAoBE,kBANvB,wBAAAsI,EAAAK,SAAAP,MAAH,yBAAAJ,EAAAY,MAAAC,KAAAC,YAAA,GAQZjB,IAAc/H,EAAoBa,eAAeoH,KACpD,CAACvF,EAAUiF,EAAOI,IAErBnC,oBAAU,WACJmC,IAAc/H,EAAoBa,eACpC0G,EAAQ,qBAET,CAACQ,EAAWR,IAEf,IAAMnF,EAAK,eAAA6G,EAAAzG,OAAA2F,EAAA,EAAA3F,CAAA4F,EAAAhI,EAAAiI,KAAG,SAAAa,EAAOC,EAAcC,GAArB,IAAAC,EAAA,OAAAjB,EAAAhI,EAAAmI,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,UACRX,IAAc/H,EAAoBE,iBAD1B,CAAAoJ,EAAAZ,KAAA,eAEVa,QAAQ/B,MAAR,qCAAA9G,OAAmDqH,EAAnD,cAAArH,OAAyEgC,IAF/D4G,EAAAE,OAAA,wBAMZ7G,EAAYwG,GACZnB,EAAahI,EAAoBC,uBAPrBqJ,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EASWjB,IAAU0B,EAAMC,GAT3B,OASJC,EATIC,EAAAV,KAUVhB,EAASyB,EAAO1B,OAChBK,EAAahI,EAAoBa,eAXvByI,EAAAZ,KAAA,iBAAAY,EAAAb,KAAA,GAAAa,EAAAX,GAAAW,EAAA,SAaVtB,EAAahI,EAAoBE,kBACjCsH,EAAK,iBAdK,yBAAA8B,EAAAT,SAAAK,EAAA,kBAAH,gBAAAO,EAAAC,GAAA,OAAAT,EAAAH,MAAAC,KAAAC,YAAA,GA2BX,OAAOW,EAAAvJ,EAAAC,cAAC0F,EAAsB6D,SAAvBpH,OAAAqH,OAAA,CAAgC3F,MAAO,CAAExB,WAAUiF,QAAO5H,MAAOgI,EAAW3F,QAAO0H,OAT3E,SAACC,GACdnC,EAAS,IACTI,EAAahI,EAAoBE,kBAEjCuH,IAAiB,yBAA0B,YAC3CA,IAAiB,yBAA0B,SACtCsC,GAAQxC,EAAQ,wBAGiF1H,IAGnG,SAASC,IACd,IAAMkK,EAAUC,qBAAWlE,GAC3B,GAAIiE,IAAY9C,EACd,MAAM,IAAIgD,MAAJ,kEAER,OAAOF,yYCxEHG,EAAgB,WACpB,IAAMxC,EAAStB,OAAe+D,YAAc,eAE5C,OADC/D,OAAe+D,WAAazC,EACtBA,GAGIvF,EAAQ,SAACM,EAAkBI,GACtC,MAToB,aAShBA,EAAmCuH,EAAQ,KACxC9C,EAAQ,CAAE7E,WAAUiF,MAAOwC,KAAmB,MAG1ClC,EAAa,SAACN,GACzB,OAAIA,IAAUwC,IAAwB5C,GAAQ,EAAO,KAC9CA,GAAQ,EAAM,MAKV+C,EAAc,SAACC,EAAeC,GACzC,OAAOC,aAAaC,QAAb,GAAAhK,OAAwB6J,EAAxB,MAAA7J,OAAkC8J,KAAc,IAG5CG,EAAe,SAACJ,EAAeC,EAAiBtG,GAC3D,OAAOuG,aAAaG,QAAb,GAAAlK,OAAwB6J,EAAxB,MAAA7J,OAAkC8J,GAAWtG,IAGzC2G,EAAe,SAACN,EAAeC,GAC1C,OAAOC,aAAaK,WAAb,GAAApK,OAA2B6J,EAA3B,MAAA7J,OAAqC8J,KAiBxCO,EAAY,WAChB,IAAMC,EAAMV,EAAY,QAAS,QACjC,OAAKU,EACEC,KAAKC,MAAMF,GADD,IAING,EAAkB,SAC7BxD,EACAyD,EACAC,GAEA,IAAMC,EAA6B,CAAEC,GAAI,IAWnCC,EAAgB,SAAhBA,IACJ,GAAI7D,IAAUwC,IAGZ,OAFAmB,EAAOC,GAAGE,eAAYC,OACtBL,IAGF,IAAMM,EAAUZ,KAfK,SAACY,GACtB,QAAwBD,IAApBJ,EAAOC,GAAGK,MAAqB,OAAO,EAC1C,GAAIN,EAAOC,GAAGK,MAAMC,SAAWF,EAAQE,OAAQ,OAAO,EAGtD,QAAIP,EAAOC,GAAGK,MAAME,KAAK,SAAC1H,EAAG2H,GAAJ,OADPC,EAC6B5H,EADnB6H,EACsBN,EAAQI,KADjBC,EAAGE,OAASD,EAAGC,MAAQF,EAAGG,OAASF,EAAGE,MAAQH,EAAGI,OAASH,EAAGG,MAArF,IAACJ,EAAUC,KAYxBI,CAAeV,KACjBL,EAAOC,GAAGK,MAAQD,EAClBP,EAAGO,IAELL,EAAOC,GAAGE,UAAYa,WAAW,kBAAMd,KAAiB,MAI1D,OADAF,EAAOC,GAAGE,UAAYa,WAAW,kBAAMd,KAAiB,KACjDF,GAGIiB,EAAqB,SAACjB,GAC7BA,EAAOC,GAAGE,WACZe,aAAalB,EAAOC,GAAGE,YAIdgB,EAAO,eAAAvE,EAAA1F,OAAAkK,EAAA,EAAAlK,CAAA4F,EAAAhI,EAAAiI,KAAG,SAAAC,EAAOX,EAAegF,GAAtB,IAAAC,EAAA,OAAAxE,EAAAhI,EAAAmI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACfmE,EAAM,KADS,UAEjBlF,IAAUwC,IAFO,CAAA3B,EAAAE,KAAA,eAAAF,EAAAgB,OAAA,UAEiB,GAFjB,YAIfoD,EAAO7B,KACJe,KAAK,SAAAgB,GAAC,OAAIA,EAAEZ,OAASS,EAAKT,OALd,CAAA1D,EAAAE,KAAA,eAAAF,EAAAgB,OAAA,UAK4B,GAL5B,cAOrBmB,EAAa,QAAS,OAAQM,KAAK8B,UAAL,GAAArM,OAAA8B,OAAAwK,EAAA,EAAAxK,CAAmBoK,GAAnB,CAAyBD,MAPlCnE,EAAAgB,OAAA,UAQd,GARc,wBAAAhB,EAAAK,SAAAP,MAAH,gBAAAmB,EAAAC,GAAA,OAAAxB,EAAAY,MAAAC,KAAAC,YAAA,GAWPiE,EAAQ,eAAAhE,EAAAzG,OAAAkK,EAAA,EAAAlK,CAAA4F,EAAAhI,EAAAiI,KAAG,SAAAa,EAAOvB,EAAegF,GAAtB,IAAAC,EAAA,OAAAxE,EAAAhI,EAAAmI,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EAChBmE,EAAM,KADU,UAElBlF,IAAUwC,IAFQ,CAAAb,EAAAZ,KAAA,eAAAY,EAAAE,OAAA,UAEgB,GAFhB,WAIhBoD,EAAO7B,KACHe,KAAK,SAAAgB,GAAC,OAAIA,EAAEZ,OAASS,EAAKT,OALd,CAAA5C,EAAAZ,KAAA,eAAAY,EAAAE,OAAA,UAK4B,GAL5B,cAOtBmB,EAAa,QAAS,OAAQM,KAAK8B,UAAUH,EAAKM,IAAI,SAAAJ,GAAC,OAAKA,EAAEZ,OAASS,EAAKT,KAAOS,EAAOG,MAPpExD,EAAAE,OAAA,UAQf,GARe,wBAAAF,EAAAT,SAAAK,MAAH,gBAAAiE,EAAAC,GAAA,OAAAnE,EAAAH,MAAAC,KAAAC,YAAA,GAWRqE,EAAU,eAAAC,EAAA9K,OAAAkK,EAAA,EAAAlK,CAAA4F,EAAAhI,EAAAiI,KAAG,SAAAkF,EAAO5F,EAAegF,GAAtB,IAAAC,EAAA,OAAAxE,EAAAhI,EAAAmI,KAAA,SAAAiF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA9E,MAAA,cAAA8E,EAAA9E,KAAA,EAClBmE,EAAM,KADY,UAEpBlF,IAAUwC,IAFU,CAAAqD,EAAA9E,KAAA,eAAA8E,EAAAhE,OAAA,UAEc,GAFd,WAIlBoD,EAAO7B,KACHe,KAAK,SAAAgB,GAAC,OAAIA,EAAEZ,OAASS,EAAKT,OALZ,CAAAsB,EAAA9E,KAAA,eAAA8E,EAAAhE,OAAA,UAK0B,GAL1B,cAOxBmB,EAAa,QAAS,OAAQM,KAAK8B,UAAUH,EAAKa,OAAO,SAAAX,GAAC,OAAIA,EAAEZ,OAASS,EAAKT,SAPtDsB,EAAAhE,OAAA,UAQjB,GARiB,wBAAAgE,EAAA3E,SAAA0E,MAAH,gBAAAG,EAAAC,GAAA,OAAAL,EAAAxE,MAAAC,KAAAC,YAAA,GAajB6D,EAAQ,SAACe,GACb,OAAO,IAAI1I,QAAQ,SAAC2I,EAASC,GAC3BxB,WAAW,kBAAMuB,KAAWD,MAI1BrG,EAAU,SAAIwG,EAAQH,GAC1B,OAAO,IAAI1I,QAAQ,SAAC2I,EAASC,GAC3BxB,WAAW,kBAAMuB,EAAQE,IAAMH,MAI7BvD,EAAU,SAAIuD,GAClB,OAAO,IAAI1I,QAAQ,SAAC2I,EAASC,GAC3BxB,WAAW,kBAAMwB,KAAUF,uCCnJ/BxI,EAAA4I,EAAAC,EAAA,sBAAAC,IAAA9I,EAAA4I,EAAAC,EAAA,sBAAA3G,IAAA,IAAA6G,EAAA/I,EAAA,GAAAgJ,EAAAhJ,EAAAiJ,EAAAF,GAAAG,EAAAlJ,EAAA,IAWMmJ,EAAsB,GACtB1I,EAAsBsB,wBAAcoH,GAE1C,SAASC,EAA+D3O,GAAe,IAC7E4O,EAAoB5O,EAApB4O,gBACFC,EAAMC,sBACV,SAAAC,GAAG,OACDH,EAAgBG,EAAK,CACnB/K,QAAS,aAEb,CAAC4K,IAEGlH,EAAUoH,sBACd,SAAAC,GAAG,OACDH,EAAgBG,EAAK,CACnB/K,QAAS,aAEb,CAAC4K,IAEGI,EAAOF,sBACX,SAAAC,GAAG,OACDH,EAAgBG,EAAK,CACnB/K,QAAS,UAEb,CAAC4K,IAEGK,EAAUH,sBACd,SAAAC,GAAG,OACDH,EAAgBG,EAAK,CACnB/K,QAAS,aAEb,CAAC4K,IAEGjH,EAAQmH,sBACZ,SAAAC,GAAG,OACDH,EAAgBG,EAAK,CACnB/K,QAAS,WAEb,CAAC4K,IAEH,OACEL,EAAAhO,EAAAC,cAACwF,EAAoB+D,SAArBpH,OAAAqH,OAAA,CACE3F,MAAO,CACLwK,MACAnH,UACAsH,OACAC,UACAtH,UAEE3H,IAKH,SAASqO,EAEdrO,GACA,IAAMsB,EAAmB4N,uBAAaP,GACtC,OACEJ,EAAAhO,EAAAC,cAACiO,EAAA,iBAAD,CAAkBU,SAAUnP,EAAMiG,kBAChCsI,EAAAhO,EAAAC,cAACc,EAAD,KAAmBtB,EAAMoB,WAKxB,SAASqG,IACd,IAAM0C,EAAUC,qBAAWpE,GAC3B,GAAImE,IAAYuE,EACd,MAAM,IAAIrE,MAAJ,8DAER,OAAOF","file":"static/js/main.2267cadc.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\r\nimport { useAuthentication, AuthenticationState } from '../context/AuthenticationContext';\r\nimport { Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ntype Props = { children: JSX.Element | JSX.Element[] } & RouteComponentProps;\r\n\r\nfunction AuthenticationWrapper(props: Props) {\r\n  const { state } = useAuthentication();\r\n  switch (state) {\r\n    case AuthenticationState.OnGoingAuthentication:\r\n    case AuthenticationState.NonAuthenticated:\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/login',\r\n            search: `?redirect=${encodeURIComponent(props.location.pathname)}`\r\n          }}\r\n        />\r\n      );\r\n    case AuthenticationState.Authenticated:\r\n      return <Suspense fallback={<CircularProgress />}>{props.children}</Suspense>;\r\n  }\r\n}\r\n\r\nexport function withAuthenticated<P>(WrappedComponent: React.ComponentType<P>): React.ComponentType<P> {\r\n  const Wrapper = withRouter(AuthenticationWrapper);\r\n  return (props: P) => (\r\n    <Wrapper>\r\n      <WrappedComponent {...props} />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport { useAuthentication, AuthenticationState } from '../../context/AuthenticationContext';\r\n\r\nconst useStyles = makeStyles({\r\n  cardContainer: {\r\n    padding: 20,\r\n    textAlign: 'center'\r\n  },\r\n  card: {\r\n    display: 'inline-block',\r\n    maxWidth: 345\r\n  },\r\n  hint: {\r\n    fontSize: 12\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\ntype Props = {} & RouteComponentProps;\r\n\r\nfunction LoginPage(props: Props) {\r\n  const classes = useStyles();\r\n  const { state, login } = useAuthentication();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const canLogin = state === AuthenticationState.NonAuthenticated && username && password;\r\n  const onGoingLogin = state === AuthenticationState.OnGoingAuthentication;\r\n\r\n  if (state === AuthenticationState.Authenticated) {\r\n    const params = new URLSearchParams(props.location.search);\r\n    const redirect = params.get('redirect') || '/';\r\n    return <Redirect to={redirect} />;\r\n  }\r\n  return (\r\n    <div className={classes.cardContainer}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://upload.wikimedia.org/wikipedia/commons/f/f6/Eiffel_Tower_and_the_Trocadero%2C_Exposition_Universal%2C_1900%2C_Paris%2C_France.jpg\"\r\n          title=\"Eiffel Tower\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Welcome to TodoList React\r\n          </Typography>\r\n          <Typography className={classes.hint} color=\"textSecondary\" gutterBottom>\r\n            Try with password: “password”\r\n          </Typography>\r\n          <TextField\r\n            label=\"Username\"\r\n            value={username}\r\n            onChange={p => setUsername(p.currentTarget.value)}\r\n            onKeyPress={ev => {\r\n              if (ev.which === 13 && canLogin) {\r\n                login(username, password);\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n          <br />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={p => setPassword(p.currentTarget.value)}\r\n            onKeyPress={ev => {\r\n              if (ev.which === 13 && canLogin) {\r\n                login(username, password);\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button color=\"primary\" disabled={!canLogin} onClick={() => login(username, password)}>\r\n            Login\r\n          </Button>\r\n          {onGoingLogin ? <CircularProgress size={24} /> : <></>}\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { withAuthenticated } from './hoc/Authenticated';\nimport { AuthenticationProvider } from './context/AuthenticationContext';\nimport { NotificationProvider } from './context/NotificationContext';\nimport LoginPage from './component/login/LoginPage';\n\nconst loadAuthenticatedApp = () => import('./component/authenticated/AuthenticatedApp');\nconst AuthenticatedApp = React.lazy(loadAuthenticatedApp);\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    loadAuthenticatedApp();\n  }, []);\n  return (\n    <div className=\"App\">\n      <NotificationProvider maxNotifications={3}>\n        <AuthenticationProvider>\n          <Router>\n            <Switch>\n              <Route exact path=\"/login\" component={LoginPage} />\n              <Route component={withAuthenticated(AuthenticatedApp)} />\n            </Switch>\n          </Router>\n        </AuthenticationProvider>\n      </NotificationProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport * as Api from '../api';\r\nimport { useNotification } from './NotificationContext';\r\n\r\nexport enum AuthenticationState {\r\n  NonAuthenticated = 'NonAuthenticated',\r\n  OnGoingAuthentication = 'OnGoingAuthentication',\r\n  Authenticated = 'Authenticated'\r\n}\r\n\r\nexport type AuthenticationContextType = {\r\n  username: string;\r\n  token: string;\r\n  state: AuthenticationState;\r\n  login: (user: string, pass: string) => void;\r\n  logout: (silent?: boolean) => void;\r\n};\r\n\r\nconst defaultAuthentication = {} as AuthenticationContextType;\r\nconst AuthenticationContext = createContext(defaultAuthentication);\r\n\r\nexport function AuthenticationProvider<TProps>(props: TProps) {\r\n  const { success, error } = useNotification();\r\n  const [username, setUsername] = useState(() => Api.readStorage('AuthenticationProvider', 'username'));\r\n  const [token, setToken] = useState(() => Api.readStorage('AuthenticationProvider', 'token'));\r\n  const [authState, setAuthState] = useState(AuthenticationState.OnGoingAuthentication);\r\n\r\n  useEffect(() => {\r\n    const checkToken = async () => {\r\n      const validToken = token !== '' && (await Api.checkToken(token));\r\n      if (validToken) {\r\n        Api.writeStorage('AuthenticationProvider', 'username', username);\r\n        Api.writeStorage('AuthenticationProvider', 'token', token);\r\n        setAuthState(AuthenticationState.Authenticated);\r\n      } else setAuthState(AuthenticationState.NonAuthenticated);\r\n    };\r\n    if (authState !== AuthenticationState.Authenticated) checkToken();\r\n  }, [username, token, authState]);\r\n\r\n  useEffect(() => {\r\n    if (authState === AuthenticationState.Authenticated) {\r\n      success('Login successful');\r\n    }\r\n  }, [authState, success]);\r\n\r\n  const login = async (user: string, pass: string) => {\r\n    if (authState !== AuthenticationState.NonAuthenticated) {\r\n      console.error(`Unable to login, current state is ${authState} for user ${username}`);\r\n      return;\r\n    }\r\n\r\n    setUsername(user);\r\n    setAuthState(AuthenticationState.OnGoingAuthentication);\r\n    try {\r\n      const tokens = await Api.login(user, pass);\r\n      setToken(tokens.token);\r\n      setAuthState(AuthenticationState.Authenticated);\r\n    } catch (err) {\r\n      setAuthState(AuthenticationState.NonAuthenticated);\r\n      error(`Login failure`);\r\n    }\r\n  };\r\n\r\n  const logout = (silent?: boolean) => {\r\n    setToken('');\r\n    setAuthState(AuthenticationState.NonAuthenticated);\r\n\r\n    Api.clearStorage('AuthenticationProvider', 'username');\r\n    Api.clearStorage('AuthenticationProvider', 'token');\r\n    if (!silent) success('Logout successful');\r\n  };\r\n\r\n  return <AuthenticationContext.Provider value={{ username, token, state: authState, login, logout }} {...props} />;\r\n}\r\n\r\nexport function useAuthentication() {\r\n  const context = useContext(AuthenticationContext);\r\n  if (context === defaultAuthentication) {\r\n    throw new Error(`useAuthentication must be used within a AuthenticationProvider`);\r\n  }\r\n  return context;\r\n}\r\n","/* Login API */\r\n\r\ntype LoginSuccess = {\r\n  username: string;\r\n  token: string;\r\n};\r\nconst validPassword = 'password';\r\n\r\nconst getValidToken = () => {\r\n  const token = (window as any).validToken || 'w€lc0Me';\r\n  (window as any).validToken = token;\r\n  return token;\r\n};\r\n\r\nexport const login = (username: string, password: string): Promise<LoginSuccess> => {\r\n  if (password !== validPassword) return failure(500);\r\n  return success({ username, token: getValidToken() }, 500);\r\n};\r\n\r\nexport const checkToken = (token: string): Promise<boolean> => {\r\n  if (token !== getValidToken()) return success(false, 500);\r\n  return success(true, 500);\r\n};\r\n\r\n/* Storage API */\r\n\r\nexport const readStorage = (space: string, keyName: string) => {\r\n  return localStorage.getItem(`${space}::${keyName}`) || '';\r\n};\r\n\r\nexport const writeStorage = (space: string, keyName: string, value: string) => {\r\n  return localStorage.setItem(`${space}::${keyName}`, value);\r\n};\r\n\r\nexport const clearStorage = (space: string, keyName: string) => {\r\n  return localStorage.removeItem(`${space}::${keyName}`);\r\n};\r\n\r\n/* Todolist */\r\n\r\nexport type Todo = {\r\n  guid: string;\r\n  task: string;\r\n  done: boolean;\r\n};\r\nexport type TodoListenerHandle = {\r\n  _i: {\r\n    _handleId?: NodeJS.Timeout;\r\n    _data?: Todo[];\r\n  };\r\n};\r\n\r\nconst readTodos = (): Todo[] => {\r\n  const raw = readStorage('Todos', 'data');\r\n  if (!raw) return [];\r\n  return JSON.parse(raw);\r\n};\r\n\r\nexport const addTodoListener = (\r\n  token: string,\r\n  fn: (todos: Todo[]) => void,\r\n  connectionLost: () => void\r\n): TodoListenerHandle => {\r\n  const handle: TodoListenerHandle = { _i: {} };\r\n\r\n  const changeDetected = (newData: Todo[]) => {\r\n    if (handle._i._data === undefined) return true;\r\n    if (handle._i._data.length !== newData.length) return true;\r\n\r\n    const sameTodo = (t1: Todo, t2: Todo) => t1.guid === t2.guid && t1.task === t2.task && t1.done === t2.done;\r\n    if (handle._i._data.some((p, idx) => !sameTodo(p, newData[idx]))) return true;\r\n\r\n    return false;\r\n  };\r\n  const detectChanges = () => {\r\n    if (token !== getValidToken()) {\r\n      handle._i._handleId = undefined;\r\n      connectionLost();\r\n      return;\r\n    }\r\n    const newData = readTodos();\r\n    if (changeDetected(newData)) {\r\n      handle._i._data = newData;\r\n      fn(newData);\r\n    }\r\n    handle._i._handleId = setTimeout(() => detectChanges(), 500);\r\n  };\r\n\r\n  handle._i._handleId = setTimeout(() => detectChanges(), 500);\r\n  return handle;\r\n};\r\n\r\nexport const removeTodoListener = (handle: TodoListenerHandle): void => {\r\n  if (handle._i._handleId) {\r\n    clearTimeout(handle._i._handleId);\r\n  }\r\n};\r\n\r\nexport const addTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify([...data, todo]));\r\n  return true;\r\n};\r\n\r\nexport const editTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (!data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify(data.map(t => (t.guid === todo.guid ? todo : t))));\r\n  return true;\r\n};\r\n\r\nexport const removeTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (!data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify(data.filter(t => t.guid !== todo.guid)));\r\n  return true;\r\n};\r\n\r\n/* Helpers */\r\n\r\nconst delay = (ms: number): Promise<void> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve(), ms);\r\n  });\r\n};\r\n\r\nconst success = <T>(out: T, ms: number): Promise<T> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve(out), ms);\r\n  });\r\n};\r\n\r\nconst failure = <T>(ms: number): Promise<T> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => reject(), ms);\r\n  });\r\n};\r\n","import React, { createContext, useContext, useCallback } from 'react';\r\nimport { withSnackbar, SnackbarProvider, WithSnackbarProps } from 'notistack';\r\n\r\nexport type NotificationContextType = {\r\n  log: (msg: string) => void;\r\n  success: (msg: string) => void;\r\n  info: (msg: string) => void;\r\n  warning: (msg: string) => void;\r\n  error: (msg: string) => void;\r\n};\r\n\r\nconst defaultNotification = {} as NotificationContextType;\r\nconst NotificationContext = createContext(defaultNotification);\r\n\r\nfunction NotificationProviderInternal<TProps extends WithSnackbarProps>(props: TProps) {\r\n  const { enqueueSnackbar } = props;\r\n  const log = useCallback(\r\n    msg =>\r\n      enqueueSnackbar(msg, {\r\n        variant: 'default'\r\n      }),\r\n    [enqueueSnackbar]\r\n  );\r\n  const success = useCallback(\r\n    msg =>\r\n      enqueueSnackbar(msg, {\r\n        variant: 'success'\r\n      }),\r\n    [enqueueSnackbar]\r\n  );\r\n  const info = useCallback(\r\n    msg =>\r\n      enqueueSnackbar(msg, {\r\n        variant: 'info'\r\n      }),\r\n    [enqueueSnackbar]\r\n  );\r\n  const warning = useCallback(\r\n    msg =>\r\n      enqueueSnackbar(msg, {\r\n        variant: 'warning'\r\n      }),\r\n    [enqueueSnackbar]\r\n  );\r\n  const error = useCallback(\r\n    msg =>\r\n      enqueueSnackbar(msg, {\r\n        variant: 'error'\r\n      }),\r\n    [enqueueSnackbar]\r\n  );\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{\r\n        log,\r\n        success,\r\n        info,\r\n        warning,\r\n        error\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport function NotificationProvider<\r\n  TProps extends { maxNotifications: number; children: JSX.Element | JSX.Element[] }\r\n>(props: TProps) {\r\n  const WrappedComponent = withSnackbar(NotificationProviderInternal);\r\n  return (\r\n    <SnackbarProvider maxSnack={props.maxNotifications}>\r\n      <WrappedComponent>{props.children}</WrappedComponent>\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\nexport function useNotification() {\r\n  const context = useContext(NotificationContext);\r\n  if (context === defaultNotification) {\r\n    throw new Error(`useNotification must be used within a NotificationProvider`);\r\n  }\r\n  return context;\r\n}\r\n"],"sourceRoot":""}