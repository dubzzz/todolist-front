{"version":3,"sources":["context/AuthentificationContext.tsx","api/index.ts","hoc/Authentificated.tsx","component/login/LoginPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AuthentificationState","defaultAuthentification","AuthentificationContext","createContext","AuthentificationProvider","props","_useState","useState","Api","_useState2","Object","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","username","setUsername","_useState3","_useState4","token","setToken","_useState5","OnGoingAuthentification","_useState6","authState","setAuthState","useEffect","checkToken","_ref","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","t0","sent","Authentificated","NonAuthentificated","stop","apply","this","arguments","login","_ref2","_callee2","user","pass","tokens","_context2","console","error","concat","abrupt","_x","_x2","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Provider","assign","value","state","logout","useAuthentification","context","useContext","Error","password","failure","success","readStorage","space","keyName","localStorage","getItem","writeStorage","setItem","clearStorage","removeItem","readTodos","raw","JSON","parse","addTodoListener","fn","handle","_i","detectChanges","newData","undefined","_data","length","some","p","idx","t1","t2","guid","task","done","changeDetected","_handleId","setTimeout","removeTodoListener","clearTimeout","addTodo","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","todo","data","delay","t","stringify","_home_travis_build_dubzzz_todolist_front_todolist_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","editTodo","map","removeTodo","_ref3","_callee3","_context3","filter","_x3","ms","Promise","resolve","reject","out","AuthentificationWrapper","react_default","react_router","to","pathname","search","encodeURIComponent","location","react","fallback","CircularProgress","children","withAuthentificated","WrappedComponent","Wrapper","withRouter","useStyles","makeStyles","cardContainer","padding","textAlign","card","display","maxWidth","hint","fontSize","media","height","classes","_useAuthentification","slicedToArray","setPassword","canLogin","onGoingLogin","redirect","URLSearchParams","get","className","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","TextField","label","onChange","currentTarget","onKeyPress","ev","which","preventDefault","type","CardActions","Button","disabled","onClick","size","Fragment","loadAuthentificatedApp","all","__webpack_require__","e","then","bind","AuthentificatedApp","React","lazy","App","react_router_dom","exact","path","LoginPage","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb5f2875.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport * as Api from '../api';\r\n\r\nexport enum AuthentificationState {\r\n  NonAuthentificated = 'NonAuthentificated',\r\n  OnGoingAuthentification = 'OnGoingAuthentification',\r\n  Authentificated = 'Authentificated'\r\n}\r\n\r\nexport type AuthentificationContextType = {\r\n  username: string;\r\n  token: string;\r\n  state: AuthentificationState;\r\n  login: (user: string, pass: string) => void;\r\n  logout: () => void;\r\n};\r\n\r\nconst defaultAuthentification = {} as AuthentificationContextType;\r\nconst AuthentificationContext = createContext(defaultAuthentification);\r\n\r\nexport function AuthentificationProvider<TProps>(props: TProps) {\r\n  const [username, setUsername] = useState(() => Api.readStorage('AuthentificationProvider', 'username'));\r\n  const [token, setToken] = useState(() => Api.readStorage('AuthentificationProvider', 'token'));\r\n  const [authState, setAuthState] = useState(AuthentificationState.OnGoingAuthentification);\r\n\r\n  useEffect(() => {\r\n    const checkToken = async () => {\r\n      const validToken = token !== '' && (await Api.checkToken(token));\r\n      if (validToken) {\r\n        Api.writeStorage('AuthentificationProvider', 'username', username);\r\n        Api.writeStorage('AuthentificationProvider', 'token', token);\r\n        setAuthState(AuthentificationState.Authentificated);\r\n      } else setAuthState(AuthentificationState.NonAuthentificated);\r\n    };\r\n    if (authState !== AuthentificationState.Authentificated) checkToken();\r\n  }, [username, token, authState]);\r\n\r\n  const login = async (user: string, pass: string) => {\r\n    if (authState !== AuthentificationState.NonAuthentificated) {\r\n      console.error(`Unable to login, current state is ${authState} for user ${username}`);\r\n      return;\r\n    }\r\n\r\n    setUsername(user);\r\n    setAuthState(AuthentificationState.OnGoingAuthentification);\r\n    try {\r\n      const tokens = await Api.login(user, pass);\r\n      setToken(tokens.token);\r\n      setAuthState(AuthentificationState.Authentificated);\r\n    } catch (err) {\r\n      setAuthState(AuthentificationState.NonAuthentificated);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken('');\r\n    setAuthState(AuthentificationState.NonAuthentificated);\r\n\r\n    Api.clearStorage('AuthentificationProvider', 'username');\r\n    Api.clearStorage('AuthentificationProvider', 'token');\r\n  };\r\n\r\n  return <AuthentificationContext.Provider value={{ username, token, state: authState, login, logout }} {...props} />;\r\n}\r\n\r\nexport function useAuthentification() {\r\n  const context = useContext(AuthentificationContext);\r\n  if (context === defaultAuthentification) {\r\n    throw new Error(`useAuthentification must be used within a AuthentificationProvider`);\r\n  }\r\n  return context;\r\n}\r\n","/* Login API */\r\n\r\ntype LoginSuccess = {\r\n  username: string;\r\n  token: string;\r\n};\r\nconst validPassword = 'password';\r\nconst validToken = 'w€lc0Me';\r\n\r\nexport const login = (username: string, password: string): Promise<LoginSuccess> => {\r\n  if (password !== validPassword) return failure(500);\r\n  return success({ username, token: validToken }, 500);\r\n};\r\n\r\nexport const checkToken = (token: string): Promise<boolean> => {\r\n  if (token !== validToken) return success(false, 500);\r\n  return success(true, 500);\r\n};\r\n\r\n/* Storage API */\r\n\r\nexport const readStorage = (space: string, keyName: string) => {\r\n  return localStorage.getItem(`${space}::${keyName}`) || '';\r\n};\r\n\r\nexport const writeStorage = (space: string, keyName: string, value: string) => {\r\n  return localStorage.setItem(`${space}::${keyName}`, value);\r\n};\r\n\r\nexport const clearStorage = (space: string, keyName: string) => {\r\n  return localStorage.removeItem(`${space}::${keyName}`);\r\n};\r\n\r\n/* Todolist */\r\n\r\nexport type Todo = {\r\n  guid: string;\r\n  task: string;\r\n  done: boolean;\r\n};\r\nexport type TodoListenerHandle = {\r\n  _i: {\r\n    _handleId?: NodeJS.Timeout;\r\n    _data?: Todo[];\r\n  };\r\n};\r\n\r\nconst readTodos = (): Todo[] => {\r\n  const raw = readStorage('Todos', 'data');\r\n  if (!raw) return [];\r\n  return JSON.parse(raw);\r\n};\r\n\r\nexport const addTodoListener = (fn: (todos: Todo[]) => void): TodoListenerHandle => {\r\n  const handle: TodoListenerHandle = { _i: {} };\r\n\r\n  const changeDetected = (newData: Todo[]) => {\r\n    if (handle._i._data === undefined) return true;\r\n    if (handle._i._data.length !== newData.length) return true;\r\n\r\n    const sameTodo = (t1: Todo, t2: Todo) => t1.guid === t2.guid && t1.task === t2.task && t1.done === t2.done;\r\n    if (handle._i._data.some((p, idx) => !sameTodo(p, newData[idx]))) return true;\r\n\r\n    return false;\r\n  };\r\n  const detectChanges = () => {\r\n    const newData = readTodos();\r\n    if (changeDetected(newData)) {\r\n      handle._i._data = newData;\r\n      fn(newData);\r\n    }\r\n    handle._i._handleId = setTimeout(() => detectChanges(), 500);\r\n  };\r\n\r\n  handle._i._handleId = setTimeout(() => detectChanges(), 500);\r\n  return handle;\r\n};\r\n\r\nexport const removeTodoListener = (handle: TodoListenerHandle): void => {\r\n  if (handle._i._handleId) {\r\n    clearTimeout(handle._i._handleId);\r\n  }\r\n};\r\n\r\nexport const addTodo = async (todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n\r\n  const data = readTodos();\r\n  if (data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify([...data, todo]));\r\n  return true;\r\n};\r\n\r\nexport const editTodo = async (todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n\r\n  const data = readTodos();\r\n  if (!data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify(data.map(t => (t.guid === todo.guid ? todo : t))));\r\n  return true;\r\n};\r\n\r\nexport const removeTodo = async (todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n\r\n  const data = readTodos();\r\n  if (!data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify(data.filter(t => t.guid !== todo.guid)));\r\n  return true;\r\n};\r\n\r\n/* Helpers */\r\n\r\nconst delay = (ms: number): Promise<void> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve(), ms);\r\n  });\r\n};\r\n\r\nconst success = <T>(out: T, ms: number): Promise<T> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve(out), ms);\r\n  });\r\n};\r\n\r\nconst failure = <T>(ms: number): Promise<T> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => reject(), ms);\r\n  });\r\n};\r\n","import React, { Suspense } from 'react';\r\nimport { useAuthentification, AuthentificationState } from '../context/AuthentificationContext';\r\nimport { Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ntype Props = { children: JSX.Element | JSX.Element[] } & RouteComponentProps;\r\n\r\nfunction AuthentificationWrapper(props: Props) {\r\n  const { state } = useAuthentification();\r\n  switch (state) {\r\n    case AuthentificationState.OnGoingAuthentification:\r\n    case AuthentificationState.NonAuthentificated:\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/login',\r\n            search: `?redirect=${encodeURIComponent(props.location.pathname)}`\r\n          }}\r\n        />\r\n      );\r\n    case AuthentificationState.Authentificated:\r\n      return <Suspense fallback={<CircularProgress />}>{props.children}</Suspense>;\r\n  }\r\n}\r\n\r\nexport function withAuthentificated<P>(WrappedComponent: React.ComponentType<P>): React.ComponentType<P> {\r\n  const Wrapper = withRouter(AuthentificationWrapper);\r\n  return (props: P) => (\r\n    <Wrapper>\r\n      <WrappedComponent {...props} />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport { useAuthentification, AuthentificationState } from '../../context/AuthentificationContext';\r\n\r\nconst useStyles = makeStyles({\r\n  cardContainer: {\r\n    padding: 20,\r\n    textAlign: 'center'\r\n  },\r\n  card: {\r\n    display: 'inline-block',\r\n    maxWidth: 345\r\n  },\r\n  hint: {\r\n    fontSize: 12\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\ntype Props = {} & RouteComponentProps;\r\n\r\nfunction LoginPage(props: Props) {\r\n  const classes = useStyles();\r\n  const { state, login } = useAuthentification();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const canLogin = state === AuthentificationState.NonAuthentificated && username && password;\r\n  const onGoingLogin = state === AuthentificationState.OnGoingAuthentification;\r\n\r\n  if (state === AuthentificationState.Authentificated) {\r\n    const params = new URLSearchParams(props.location.search);\r\n    const redirect = params.get('redirect') || '/';\r\n    return <Redirect to={redirect} />;\r\n  }\r\n  return (\r\n    <div className={classes.cardContainer}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://upload.wikimedia.org/wikipedia/commons/f/f6/Eiffel_Tower_and_the_Trocadero%2C_Exposition_Universal%2C_1900%2C_Paris%2C_France.jpg\"\r\n          title=\"Eiffel Tower\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Welcome to TodoList React\r\n          </Typography>\r\n          <Typography className={classes.hint} color=\"textSecondary\" gutterBottom>\r\n            Try with password: “password”\r\n          </Typography>\r\n          <TextField\r\n            label=\"Username\"\r\n            value={username}\r\n            onChange={p => setUsername(p.currentTarget.value)}\r\n            onKeyPress={ev => {\r\n              if (ev.which === 13 && canLogin) {\r\n                login(username, password);\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n          <br />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={p => setPassword(p.currentTarget.value)}\r\n            onKeyPress={ev => {\r\n              if (ev.which === 13 && canLogin) {\r\n                login(username, password);\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button color=\"primary\" disabled={!canLogin} onClick={() => login(username, password)}>\r\n            Login\r\n          </Button>\r\n          {onGoingLogin ? <CircularProgress size={24} /> : <></>}\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { withAuthentificated } from './hoc/Authentificated';\nimport { AuthentificationProvider } from './context/AuthentificationContext';\nimport LoginPage from './component/login/LoginPage';\n\nconst loadAuthentificatedApp = () => import('./component/authentificated/AuthentificatedApp');\nconst AuthentificatedApp = React.lazy(loadAuthentificatedApp);\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    loadAuthentificatedApp();\n  }, []);\n  return (\n    <div className=\"App\">\n      <AuthentificationProvider>\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route component={withAuthentificated(AuthentificatedApp)} />\n          </Switch>\n        </Router>\n      </AuthentificationProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}