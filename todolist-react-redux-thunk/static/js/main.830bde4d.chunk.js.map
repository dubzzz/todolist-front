{"version":3,"sources":["redux/reducers/authentication.ts","redux/reducers/index.ts","redux/store.ts","hoc/Authenticated.tsx","component/login/LoginPage.tsx","component/Notifier.tsx","App.tsx","serviceWorker.ts","index.tsx","redux/reducers/notification.ts","redux/actions/notification.ts","api/index.ts","redux/actions/authentication.ts","redux/reducers/todolist.ts","redux/actions/todolist.ts"],"names":["AuthenticationStatus","initialState","username","token","status","NonAuthenticated","combined","combineReducers","authentication","state","arguments","length","undefined","action","type","AUTHENTICATION_LOGIN_SUCCESS","_action$payload","payload","Object","objectSpread","Authenticated","AUTHENTICATION_LOGIN_FAILURE","AUTHENTICATION_LOGIN_ON_GOING","OnGoingAuthentication","notification","todolist","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","AuthenticationWrapper","props","useSelector","react_default","a","createElement","react_router","to","pathname","search","concat","encodeURIComponent","location","react","fallback","CircularProgress","children","withAuthenticated","WrappedComponent","Wrapper","withRouter","useStyles","makeStyles","cardContainer","padding","textAlign","card","display","maxWidth","hint","fontSize","media","height","classes","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","canLogin","onGoingLogin","redirect","URLSearchParams","get","className","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","TextField","label","value","onChange","p","currentTarget","onKeyPress","ev","which","tryLoginByCredsAction","preventDefault","CardActions","Button","disabled","onClick","size","Fragment","withSnackbar","enqueueSnackbar","onGoingNotifications","setOnGoingNotifications","notifications","useEffect","computeVariant","level","NotificationLevel","Success","Info","Warn","Error","Log","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","n","id","o","defineProperty","message","onClose","_n$id","objectWithoutProperties","map","_toPropertyKey","removeNotifyAction","_iterator","Symbol","iterator","next","done","err","return","loadAuthenticatedApp","Promise","all","__webpack_require__","e","then","bind","AuthenticatedApp","React","lazy","App","tryLoginByTokenAction","build","maxSnack","component_Notifier","react_router_dom","exact","path","LoginPage","Boolean","hostname","match","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_exports__","NOTIFICATION_ADD","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","NOTIFICATION_REMOVE","filter","d","notifyAction","Math","random","toString","substr","getValidToken","validToken","login","failure","success","checkToken","readStorage","space","keyName","localStorage","getItem","writeStorage","setItem","clearStorage","removeItem","readTodos","raw","JSON","parse","addTodoListener","fn","connectionLost","handle","_i","detectChanges","_handleId","newData","_data","some","idx","t1","t2","guid","task","changeDetected","setTimeout","removeTodoListener","clearTimeout","addTodo","_ref","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","todo","data","wrap","_context","prev","delay","abrupt","t","stringify","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","stop","_x","_x2","apply","this","editTodo","_ref2","_callee2","_context2","_x3","_x4","removeTodo","_ref3","_callee3","_context3","_x5","_x6","ms","resolve","reject","out","loginSuccessAction","loginFailureAction","loginOnGoingAction","persistTokens","Api","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","tokens","sent","t0","tryLogoutAction","silent","TodoState","todos","requesters","TODOLIST_ADD_OR_EDIT_TODO","todoState","newTodos","foundTodo","push","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","TODOLIST_REMOVE_TODO","TODOLIST_REFRESH_TODOS","todosBeingAdded","Add","reduce","acc","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","todosBeingEdited","Edit","todosBeingRemoved","Remove","Noop","TODOLIST_ADD_REQUESTER","_action$payload2","requester","includes","TODOLIST_REMOVE_REQUESTER","_action$payload3","r","addOrEditTodoAction","removeTodoAction","refreshTodosAction","addRequesterAction","removeRequesterAction","tryAddTodoAction","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","tryToggleTodoAction","getState","prevTodo","find","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_thunk_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","tryRemoveTodoAction","requestTodolistUpdates","_ref4","_callee4","_context4","_x7","stopTodolistUpdates","_ref5","_callee5","_getState$todolist","_context5","_x8","_x9"],"mappings":"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","file":"static/js/main.830bde4d.chunk.js","sourcesContent":["import {\r\n  Actions,\r\n  AUTHENTICATION_LOGIN_SUCCESS,\r\n  AUTHENTICATION_LOGIN_FAILURE,\r\n  AUTHENTICATION_LOGIN_ON_GOING\r\n} from '../actions/authentication';\r\n\r\nexport enum AuthenticationStatus {\r\n  NonAuthenticated = 'NonAuthenticated',\r\n  OnGoingAuthentication = 'OnGoingAuthentication',\r\n  Authenticated = 'Authenticated'\r\n}\r\n\r\nexport type AuthenticationState = {\r\n  username: string;\r\n  token: string;\r\n  status: AuthenticationStatus;\r\n};\r\nconst initialState: AuthenticationState = {\r\n  username: '',\r\n  token: '',\r\n  status: AuthenticationStatus.NonAuthenticated\r\n};\r\n\r\nexport default function(state = initialState, action: Actions): typeof state {\r\n  switch (action.type) {\r\n    case AUTHENTICATION_LOGIN_SUCCESS: {\r\n      const { username, token } = action.payload;\r\n      return { ...state, username, token, status: AuthenticationStatus.Authenticated };\r\n    }\r\n    case AUTHENTICATION_LOGIN_FAILURE: {\r\n      return { ...state, status: AuthenticationStatus.NonAuthenticated };\r\n    }\r\n    case AUTHENTICATION_LOGIN_ON_GOING: {\r\n      return { ...state, status: AuthenticationStatus.OnGoingAuthentication };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, Reducer } from 'redux';\r\nimport authentication from './authentication';\r\nimport notification from './notification';\r\nimport todolist from './todolist';\r\n\r\nconst combined = combineReducers({ authentication, notification, todolist });\r\nexport default combined;\r\nexport type ReduxState = (typeof combined) extends Reducer<infer U> ? U : never;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import React, { Suspense } from 'react';\r\nimport { Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { AuthenticationStatus } from '../redux/reducers/authentication';\r\nimport { ReduxState } from '../redux/reducers';\r\n\r\ntype Props = { children: JSX.Element | JSX.Element[] } & RouteComponentProps;\r\n\r\nfunction AuthenticationWrapper(props: Props) {\r\n  const status = useSelector((state: ReduxState) => state.authentication.status);\r\n  switch (status) {\r\n    case AuthenticationStatus.OnGoingAuthentication:\r\n    case AuthenticationStatus.NonAuthenticated:\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/login',\r\n            search: `?redirect=${encodeURIComponent(props.location.pathname)}`\r\n          }}\r\n        />\r\n      );\r\n    case AuthenticationStatus.Authenticated:\r\n      return <Suspense fallback={<CircularProgress />}>{props.children}</Suspense>;\r\n  }\r\n}\r\n\r\nexport function withAuthenticated<P>(WrappedComponent: React.ComponentType<P>): React.ComponentType<P> {\r\n  const Wrapper = withRouter(AuthenticationWrapper);\r\n  return (props: P) => (\r\n    <Wrapper>\r\n      <WrappedComponent {...props} />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { AuthenticationStatus } from '../../redux/reducers/authentication';\r\nimport { tryLoginByCredsAction } from '../../redux/actions/authentication';\r\n\r\nconst useStyles = makeStyles({\r\n  cardContainer: {\r\n    padding: 20,\r\n    textAlign: 'center'\r\n  },\r\n  card: {\r\n    display: 'inline-block',\r\n    maxWidth: 345\r\n  },\r\n  hint: {\r\n    fontSize: 12\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\ntype Props = {} & RouteComponentProps;\r\n\r\nfunction LoginPage(props: Props) {\r\n  const classes = useStyles();\r\n  const status = useSelector((state: ReduxState) => state.authentication.status);\r\n  const dispatch = useDispatch();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const canLogin = status === AuthenticationStatus.NonAuthenticated && username && password;\r\n  const onGoingLogin = status === AuthenticationStatus.OnGoingAuthentication;\r\n\r\n  if (status === AuthenticationStatus.Authenticated) {\r\n    const params = new URLSearchParams(props.location.search);\r\n    const redirect = params.get('redirect') || '/';\r\n    return <Redirect to={redirect} />;\r\n  }\r\n  return (\r\n    <div className={classes.cardContainer}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://upload.wikimedia.org/wikipedia/commons/f/f6/Eiffel_Tower_and_the_Trocadero%2C_Exposition_Universal%2C_1900%2C_Paris%2C_France.jpg\"\r\n          title=\"Eiffel Tower\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Welcome to TodoList React with redux-thunk\r\n          </Typography>\r\n          <Typography className={classes.hint} color=\"textSecondary\" gutterBottom>\r\n            Try with password: “password”\r\n          </Typography>\r\n          <TextField\r\n            label=\"Username\"\r\n            value={username}\r\n            onChange={p => setUsername(p.currentTarget.value)}\r\n            onKeyPress={ev => {\r\n              if (ev.which === 13 && canLogin) {\r\n                dispatch(tryLoginByCredsAction(username, password));\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n          <br />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={p => setPassword(p.currentTarget.value)}\r\n            onKeyPress={ev => {\r\n              if (ev.which === 13 && canLogin) {\r\n                dispatch(tryLoginByCredsAction(username, password));\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!canLogin}\r\n            onClick={() => dispatch(tryLoginByCredsAction(username, password))}\r\n          >\r\n            Login\r\n          </Button>\r\n          {onGoingLogin ? <CircularProgress size={24} /> : <></>}\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import { useEffect, useState } from 'react';\r\nimport { withSnackbar, WithSnackbarProps } from 'notistack';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ReduxState } from '../redux/reducers';\r\nimport { NotificationLevel } from '../redux/reducers/notification';\r\nimport { removeNotifyAction } from '../redux/actions/notification';\r\n\r\nfunction Notifier<TProps extends WithSnackbarProps>(props: TProps) {\r\n  const { enqueueSnackbar } = props;\r\n  const [onGoingNotifications, setOnGoingNotifications] = useState({} as { [id: string]: true });\r\n  const notifications = useSelector((state: ReduxState) => state.notification.notifications);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const computeVariant = (level: NotificationLevel) => {\r\n      switch (level) {\r\n        case NotificationLevel.Success:\r\n          return 'success';\r\n        case NotificationLevel.Info:\r\n          return 'info';\r\n        case NotificationLevel.Warn:\r\n          return 'warning';\r\n        case NotificationLevel.Error:\r\n          return 'error';\r\n        case NotificationLevel.Log:\r\n        default:\r\n          return 'default';\r\n      }\r\n    };\r\n    for (const n of notifications) {\r\n      if (onGoingNotifications[n.id]) continue;\r\n\r\n      setOnGoingNotifications(o => ({ ...o, [n.id]: true }));\r\n      enqueueSnackbar(n.message, {\r\n        variant: computeVariant(n.level),\r\n        onClose: () => {\r\n          setOnGoingNotifications(o => {\r\n            const { [n.id]: nid, ...others } = o;\r\n            return others;\r\n          });\r\n        }\r\n      });\r\n      dispatch(removeNotifyAction(n.id));\r\n    }\r\n  }, [notifications, onGoingNotifications, dispatch, enqueueSnackbar]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default withSnackbar(Notifier);\r\n","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { withAuthenticated } from './hoc/Authenticated';\nimport LoginPage from './component/login/LoginPage';\nimport { tryLoginByTokenAction } from './redux/actions/authentication';\nimport Notifier from './component/Notifier';\nimport { SnackbarProvider } from 'notistack';\n\nconst loadAuthenticatedApp = () => import('./component/authenticated/AuthenticatedApp');\nconst AuthenticatedApp = React.lazy(loadAuthenticatedApp);\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    loadAuthenticatedApp();\n  }, []);\n\n  useEffect(() => {\n    dispatch(tryLoginByTokenAction());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <SnackbarProvider maxSnack={3}>\n        <Notifier />\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route component={withAuthenticated(AuthenticatedApp)} />\n          </Switch>\n        </Router>\n      </SnackbarProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { NOTIFICATION_ADD, NOTIFICATION_REMOVE } from '../actions/notification';\r\nimport { Actions } from '../actions/notification';\r\n\r\nexport enum NotificationLevel {\r\n  Log = 'Log',\r\n  Success = 'Success',\r\n  Info = 'Info',\r\n  Warn = 'Warn',\r\n  Error = 'Error'\r\n}\r\nexport type NotificationState = {\r\n  notifications: { id: string; message: string; level: NotificationLevel }[];\r\n};\r\nconst initialState: NotificationState = {\r\n  notifications: []\r\n};\r\n\r\nexport default (state = initialState, action: Actions): typeof state => {\r\n  switch (action.type) {\r\n    case NOTIFICATION_ADD: {\r\n      const { id, message, level } = action.payload;\r\n      return {\r\n        ...state,\r\n        notifications: [\r\n          ...state.notifications,\r\n          {\r\n            id,\r\n            message,\r\n            level\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case NOTIFICATION_REMOVE: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(n => n.id !== id)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { NotificationLevel } from '../reducers/notification';\r\n\r\n// types\r\nexport const NOTIFICATION_ADD = 'NOTIFICATION_ADD';\r\nexport const NOTIFICATION_REMOVE = 'NOTIFICATION_REMOVE';\r\n\r\n// actions\r\nexport const notifyAction = (message: string, level: NotificationLevel) =>\r\n  ({\r\n    type: NOTIFICATION_ADD,\r\n    payload: {\r\n      id: Math.random()\r\n        .toString(16)\r\n        .substr(2),\r\n      message,\r\n      level\r\n    }\r\n  } as const);\r\nexport const removeNotifyAction = (id: string) =>\r\n  ({\r\n    type: NOTIFICATION_REMOVE,\r\n    payload: { id }\r\n  } as const);\r\n\r\nexport type ActionNotify = ReturnType<typeof notifyAction>;\r\nexport type ActionRemoveNotify = ReturnType<typeof removeNotifyAction>;\r\nexport type Actions = ActionNotify | ActionRemoveNotify;\r\n","/* Login API */\r\n\r\nexport type LoginSuccess = {\r\n  username: string;\r\n  token: string;\r\n};\r\nconst validPassword = 'password';\r\n\r\nconst getValidToken = () => {\r\n  const token = (window as any).validToken || 'w€lc0Me';\r\n  (window as any).validToken = token;\r\n  return token;\r\n};\r\n\r\nexport const login = (username: string, password: string): Promise<LoginSuccess> => {\r\n  if (password !== validPassword) return failure(500);\r\n  return success({ username, token: getValidToken() }, 500);\r\n};\r\n\r\nexport const checkToken = (token: string): Promise<boolean> => {\r\n  if (token !== getValidToken()) return success(false, 500);\r\n  return success(true, 500);\r\n};\r\n\r\n/* Storage API */\r\n\r\nexport const readStorage = (space: string, keyName: string) => {\r\n  return localStorage.getItem(`${space}::${keyName}`) || '';\r\n};\r\n\r\nexport const writeStorage = (space: string, keyName: string, value: string) => {\r\n  return localStorage.setItem(`${space}::${keyName}`, value);\r\n};\r\n\r\nexport const clearStorage = (space: string, keyName: string) => {\r\n  return localStorage.removeItem(`${space}::${keyName}`);\r\n};\r\n\r\n/* Todolist */\r\n\r\nexport type Todo = {\r\n  guid: string;\r\n  task: string;\r\n  done: boolean;\r\n};\r\nexport type TodoListenerHandle = {\r\n  _i: {\r\n    _handleId?: NodeJS.Timeout;\r\n    _data?: Todo[];\r\n  };\r\n};\r\n\r\nconst readTodos = (): Todo[] => {\r\n  const raw = readStorage('Todos', 'data');\r\n  if (!raw) return [];\r\n  return JSON.parse(raw);\r\n};\r\n\r\nexport const addTodoListener = (\r\n  token: string,\r\n  fn: (todos: Todo[]) => void,\r\n  connectionLost: () => void\r\n): TodoListenerHandle => {\r\n  const handle: TodoListenerHandle = { _i: {} };\r\n\r\n  const changeDetected = (newData: Todo[]) => {\r\n    if (handle._i._data === undefined) return true;\r\n    if (handle._i._data.length !== newData.length) return true;\r\n\r\n    const sameTodo = (t1: Todo, t2: Todo) => t1.guid === t2.guid && t1.task === t2.task && t1.done === t2.done;\r\n    if (handle._i._data.some((p, idx) => !sameTodo(p, newData[idx]))) return true;\r\n\r\n    return false;\r\n  };\r\n  const detectChanges = () => {\r\n    if (token !== getValidToken()) {\r\n      handle._i._handleId = undefined;\r\n      connectionLost();\r\n      return;\r\n    }\r\n    const newData = readTodos();\r\n    if (changeDetected(newData)) {\r\n      handle._i._data = newData;\r\n      fn(newData);\r\n    }\r\n    handle._i._handleId = setTimeout(() => detectChanges(), 500);\r\n  };\r\n\r\n  handle._i._handleId = setTimeout(() => detectChanges(), 500);\r\n  return handle;\r\n};\r\n\r\nexport const removeTodoListener = (handle: TodoListenerHandle): void => {\r\n  if (handle._i._handleId) {\r\n    clearTimeout(handle._i._handleId);\r\n  }\r\n};\r\n\r\nexport const addTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify([...data, todo]));\r\n  return true;\r\n};\r\n\r\nexport const editTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (!data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify(data.map(t => (t.guid === todo.guid ? todo : t))));\r\n  return true;\r\n};\r\n\r\nexport const removeTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (!data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify(data.filter(t => t.guid !== todo.guid)));\r\n  return true;\r\n};\r\n\r\n/* Helpers */\r\n\r\nconst delay = (ms: number): Promise<void> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve(), ms);\r\n  });\r\n};\r\n\r\nconst success = <T>(out: T, ms: number): Promise<T> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve(out), ms);\r\n  });\r\n};\r\n\r\nconst failure = <T>(ms: number): Promise<T> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => reject(), ms);\r\n  });\r\n};\r\n","import * as Api from '../../api';\r\nimport { Dispatch } from 'redux';\r\nimport { notifyAction } from './notification';\r\nimport { NotificationLevel } from '../reducers/notification';\r\n\r\n// types\r\n\r\nexport const AUTHENTICATION_LOGIN_SUCCESS = 'AUTHENTICATION_LOGIN_SUCCESS';\r\nexport const AUTHENTICATION_LOGIN_FAILURE = 'AUTHENTICATION_LOGIN_FAILURE';\r\nexport const AUTHENTICATION_LOGIN_ON_GOING = 'AUTHENTICATION_LOGIN_ON_GOING';\r\nexport const AUTHENTICATION_LOGOUT = 'AUTHENTICATION_LOGOUT';\r\n\r\n// actions\r\n\r\nconst loginSuccessAction = (username: string, token: string) =>\r\n  ({\r\n    type: AUTHENTICATION_LOGIN_SUCCESS,\r\n    payload: { username, token }\r\n  } as const);\r\n\r\nconst loginFailureAction = () =>\r\n  ({\r\n    type: AUTHENTICATION_LOGIN_FAILURE,\r\n    payload: {}\r\n  } as const);\r\n\r\nconst loginOnGoingAction = () =>\r\n  ({\r\n    type: AUTHENTICATION_LOGIN_ON_GOING,\r\n    payload: {}\r\n  } as const);\r\n\r\nexport type ActionLoginSuccess = ReturnType<typeof loginSuccessAction>;\r\nexport type ActionLoginFailure = ReturnType<typeof loginFailureAction>;\r\nexport type ActionLoginOnGoing = ReturnType<typeof loginOnGoingAction>;\r\nexport type Actions = ActionLoginSuccess | ActionLoginFailure | ActionLoginOnGoing;\r\n\r\n// thunks\r\n\r\nconst persistTokens = (username: string, token: string) => {\r\n  Api.writeStorage('AuthenticationProvider', 'username', username);\r\n  Api.writeStorage('AuthenticationProvider', 'token', token);\r\n};\r\n\r\nexport const tryLoginByCredsAction = (username: string, password: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    dispatch(loginOnGoingAction());\r\n    try {\r\n      const tokens = await Api.login(username, password);\r\n      persistTokens(tokens.username, tokens.token);\r\n      dispatch(loginSuccessAction(tokens.username, tokens.token));\r\n      dispatch(notifyAction('Login successful', NotificationLevel.Success));\r\n    } catch (err) {\r\n      dispatch(loginFailureAction());\r\n      dispatch(notifyAction('Login failure', NotificationLevel.Error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const tryLoginByTokenAction = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    const username = Api.readStorage('AuthenticationProvider', 'username');\r\n    const token = Api.readStorage('AuthenticationProvider', 'token');\r\n    if (token === '') return;\r\n\r\n    dispatch(loginOnGoingAction());\r\n\r\n    const success = await Api.checkToken(token);\r\n    if (success) {\r\n      persistTokens(username, token);\r\n      dispatch(loginSuccessAction(username, token));\r\n      dispatch(notifyAction('Login successful', NotificationLevel.Success));\r\n    } else dispatch(loginFailureAction());\r\n  };\r\n};\r\n\r\nexport const tryLogoutAction = (silent?: boolean) => {\r\n  return async (dispatch: Dispatch) => {\r\n    Api.clearStorage('AuthenticationProvider', 'username');\r\n    Api.clearStorage('AuthenticationProvider', 'token');\r\n    dispatch(loginFailureAction());\r\n    if (!silent) dispatch(notifyAction('Logout successful', NotificationLevel.Success));\r\n  };\r\n};\r\n","import {\r\n  TODOLIST_ADD_OR_EDIT_TODO,\r\n  TODOLIST_REMOVE_TODO,\r\n  TODOLIST_REFRESH_TODOS,\r\n  TODOLIST_ADD_REQUESTER,\r\n  TODOLIST_REMOVE_REQUESTER\r\n} from '../actions/todolist';\r\nimport * as Api from '../../api';\r\nimport { Actions } from '../actions/todolist';\r\n\r\nexport enum TodoState {\r\n  Noop = 'noop',\r\n  Add = 'add',\r\n  Edit = 'edit',\r\n  Remove = 'remove'\r\n}\r\nexport type TodoType = {\r\n  data: Api.Todo;\r\n  state: TodoState;\r\n};\r\nexport type TodolistState = {\r\n  ready: boolean;\r\n  todos: TodoType[];\r\n  handle: Api.TodoListenerHandle | null;\r\n  requesters: unknown[];\r\n};\r\nconst initialState: TodolistState = {\r\n  ready: false,\r\n  todos: [],\r\n  handle: null,\r\n  requesters: []\r\n};\r\n\r\nexport default (state = initialState, action: Actions): typeof state => {\r\n  switch (action.type) {\r\n    case TODOLIST_ADD_OR_EDIT_TODO: {\r\n      const { todo, state: todoState } = action.payload;\r\n\r\n      const newTodos = [] as TodoType[];\r\n      let foundTodo = false;\r\n      for (const t of state.todos) {\r\n        if (t.data.guid === todo.guid) {\r\n          foundTodo = true;\r\n          newTodos.push({ data: todo, state: todoState });\r\n        } else newTodos.push(t);\r\n      }\r\n      if (!foundTodo) newTodos.push({ data: todo, state: todoState });\r\n      return { ...state, todos: newTodos };\r\n    }\r\n    case TODOLIST_REMOVE_TODO: {\r\n      const { guid } = action.payload;\r\n      return { ...state, todos: state.todos.filter(t => t.data.guid !== guid) };\r\n    }\r\n    case TODOLIST_REFRESH_TODOS: {\r\n      const { todos } = action.payload;\r\n      const todosBeingAdded: { [guid: string]: Api.Todo } = state.todos\r\n        .filter(t => t.state === TodoState.Add)\r\n        .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n      const todosBeingEdited: { [guid: string]: Api.Todo } = state.todos\r\n        .filter(t => t.state === TodoState.Edit)\r\n        .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n      const todosBeingRemoved: { [guid: string]: Api.Todo } = state.todos\r\n        .filter(t => t.state === TodoState.Remove)\r\n        .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n\r\n      return {\r\n        ...state,\r\n        ready: true,\r\n        todos: todos\r\n          .filter(t => todosBeingAdded[t.guid] === undefined)\r\n          .map(t => {\r\n            // Remove, Edit and Noop\r\n            if (todosBeingEdited[t.guid]) return { state: TodoState.Edit, data: todosBeingEdited[t.guid] };\r\n            if (todosBeingRemoved[t.guid]) return { state: TodoState.Remove, data: todosBeingRemoved[t.guid] };\r\n            return { state: TodoState.Noop, data: t };\r\n          })\r\n          .concat(state.todos.filter(t => t.state === TodoState.Add)) // Add\r\n      };\r\n    }\r\n    case TODOLIST_ADD_REQUESTER: {\r\n      const { handle, requester } = action.payload;\r\n      if (state.requesters.includes(requester)) {\r\n        return { ...state, handle };\r\n      }\r\n      return { ...state, handle, requesters: [...state.requesters, requester] };\r\n    }\r\n    case TODOLIST_REMOVE_REQUESTER: {\r\n      const { handle, requester } = action.payload;\r\n      return { ...state, handle, requesters: state.requesters.filter(r => r !== requester) };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as Api from '../../api';\r\nimport { Dispatch } from 'redux';\r\nimport { TodoState, TodoType } from '../reducers/todolist';\r\nimport { notifyAction } from './notification';\r\nimport { NotificationLevel } from '../reducers/notification';\r\nimport { ReduxState } from '../reducers';\r\nimport { tryLogoutAction } from './authentication';\r\n\r\n// types\r\n\r\nexport const TODOLIST_ADD_OR_EDIT_TODO = 'TODOLIST_ADD_OR_EDIT_TODO';\r\nexport const TODOLIST_REMOVE_TODO = 'TODOLIST_REMOVE_TODO';\r\nexport const TODOLIST_REFRESH_TODOS = 'TODOLIST_REFRESH_TODOS';\r\nexport const TODOLIST_ADD_REQUESTER = 'TODOLIST_ADD_REQUESTER';\r\nexport const TODOLIST_REMOVE_REQUESTER = 'TODOLIST_REMOVE_REQUESTER';\r\n\r\n// actions\r\n\r\nconst addOrEditTodoAction = (todo: Api.Todo, state: TodoState) =>\r\n  ({\r\n    type: TODOLIST_ADD_OR_EDIT_TODO,\r\n    payload: { todo, state }\r\n  } as const);\r\n\r\nconst removeTodoAction = (guid: string) =>\r\n  ({\r\n    type: TODOLIST_REMOVE_TODO,\r\n    payload: { guid }\r\n  } as const);\r\n\r\nexport const refreshTodosAction = (todos: Api.Todo[]) =>\r\n  ({\r\n    type: TODOLIST_REFRESH_TODOS,\r\n    payload: { todos }\r\n  } as const);\r\n\r\nconst addRequesterAction = (handle: Api.TodoListenerHandle, requester: unknown) =>\r\n  ({\r\n    type: TODOLIST_ADD_REQUESTER,\r\n    payload: { handle, requester }\r\n  } as const);\r\n\r\nconst removeRequesterAction = (handle: Api.TodoListenerHandle | null, requester: unknown) =>\r\n  ({\r\n    type: TODOLIST_REMOVE_REQUESTER,\r\n    payload: { handle, requester }\r\n  } as const);\r\n\r\nexport type ActionAddOrEditTodo = ReturnType<typeof addOrEditTodoAction>;\r\nexport type ActionRemoveTodo = ReturnType<typeof removeTodoAction>;\r\nexport type ActionRefreshTodos = ReturnType<typeof refreshTodosAction>;\r\nexport type ActionAddRequester = ReturnType<typeof addRequesterAction>;\r\nexport type ActionRemoveRequester = ReturnType<typeof removeRequesterAction>;\r\nexport type Actions =\r\n  | ActionAddOrEditTodo\r\n  | ActionRemoveTodo\r\n  | ActionRefreshTodos\r\n  | ActionAddRequester\r\n  | ActionRemoveRequester;\r\n\r\n// thunks\r\n\r\nexport const tryAddTodoAction = (token: string, task: string) => {\r\n  return async (dispatch: Dispatch) => {\r\n    const guid = Math.random()\r\n      .toString(16)\r\n      .substr(2);\r\n\r\n    const todo = { guid, task, done: false };\r\n    dispatch(addOrEditTodoAction(todo, TodoState.Add));\r\n    try {\r\n      const r = await Api.addTodo(token, todo);\r\n      if (!r) {\r\n        dispatch(notifyAction(`Failed to add todo: ${todo.task}`, NotificationLevel.Error));\r\n        dispatch(removeTodoAction(todo.guid));\r\n      } else {\r\n        // We apply the modification\r\n        dispatch(addOrEditTodoAction(todo, TodoState.Noop));\r\n      }\r\n    } catch (err) {}\r\n  };\r\n};\r\n\r\nexport const tryToggleTodoAction = (token: string, guid: string) => {\r\n  return async (dispatch: Dispatch, getState: () => ReduxState) => {\r\n    const todos: TodoType[] = getState().todolist.todos;\r\n    const prevTodo = todos.find(t => t.data.guid === guid && t.state === TodoState.Noop);\r\n    if (!prevTodo) {\r\n      dispatch(notifyAction(`No todo available for modification given guid ${guid}`, NotificationLevel.Error));\r\n      return;\r\n    }\r\n    const todo = { ...prevTodo.data, done: !prevTodo.data.done };\r\n    dispatch(addOrEditTodoAction(todo, TodoState.Edit));\r\n\r\n    try {\r\n      const r = await Api.editTodo(token, prevTodo.data);\r\n      if (!r) {\r\n        dispatch(notifyAction(`Failed to edit todo: ${prevTodo.data.task}`, NotificationLevel.Error));\r\n        dispatch(addOrEditTodoAction(prevTodo.data, prevTodo.state));\r\n      } else {\r\n        // We apply the modification\r\n        dispatch(addOrEditTodoAction(todo, TodoState.Noop));\r\n      }\r\n    } catch (err) {}\r\n  };\r\n};\r\n\r\nexport const tryRemoveTodoAction = (token: string, guid: string) => {\r\n  return async (dispatch: Dispatch, getState: () => ReduxState) => {\r\n    const todos: TodoType[] = getState().todolist.todos;\r\n    const prevTodo = todos.find(t => t.data.guid === guid && t.state === TodoState.Noop);\r\n    if (!prevTodo) {\r\n      dispatch(notifyAction(`No todo available for modification given guid ${guid}`, NotificationLevel.Error));\r\n      return;\r\n    }\r\n    dispatch(addOrEditTodoAction(prevTodo.data, TodoState.Remove));\r\n\r\n    try {\r\n      const r = await Api.removeTodo(token, prevTodo.data);\r\n      if (!r) {\r\n        dispatch(notifyAction(`Failed to remove todo: ${prevTodo.data.task}`, NotificationLevel.Error));\r\n        dispatch(addOrEditTodoAction(prevTodo.data, prevTodo.state));\r\n      } else {\r\n        // We apply the modification\r\n        dispatch(removeTodoAction(prevTodo.data.guid));\r\n      }\r\n    } catch (err) {}\r\n  };\r\n};\r\n\r\nexport const requestTodolistUpdates = (token: string, requester: unknown) => {\r\n  return async (dispatch: Dispatch, getState: () => ReduxState) => {\r\n    const handle =\r\n      getState().todolist.handle ||\r\n      Api.addTodoListener(\r\n        token,\r\n        todos => dispatch(refreshTodosAction(todos)),\r\n        () => {\r\n          dispatch(notifyAction('Revoked token, connection lost', NotificationLevel.Error));\r\n          tryLogoutAction(true)(dispatch);\r\n        }\r\n      );\r\n    dispatch(addRequesterAction(handle, requester));\r\n  };\r\n};\r\n\r\nexport const stopTodolistUpdates = (requester: unknown) => {\r\n  return async (dispatch: Dispatch, getState: () => ReduxState) => {\r\n    const { handle, requesters } = getState().todolist;\r\n    if (requesters.length === 1 && requesters[0] === requester) {\r\n      Api.removeTodoListener(handle!);\r\n      dispatch(removeRequesterAction(null, requester));\r\n    } else {\r\n      dispatch(removeRequesterAction(handle, requester));\r\n    }\r\n  };\r\n};\r\n"],"sourceRoot":""}