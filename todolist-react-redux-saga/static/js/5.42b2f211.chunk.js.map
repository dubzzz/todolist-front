{"version":3,"sources":["component/authentificated/AuthentificatedHeader.tsx","component/authentificated/AuthentificatedMenu.tsx","hook/WindowDimension.tsx","component/authentificated/AuthentificatedApp.tsx"],"names":["useStyles","makeStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","concat","enteringScreen","menuButtonHidden","display","title","flexGrow","AuthentificatedHeader","props","classes","username","useSelector","state","authentication","ready","todolist","todos","dispatch","useDispatch","react_default","a","createElement","AppBar","position","className","clsx","drawerOpened","Toolbar","IconButton","edge","color","aria-label","onClick","toggleDrawer","Menu_default","Typography","variant","Badge","badgeContent","filter","t","TodoState","Remove","length","ShoppingCart_default","tryLogoutAction","PowerSettingsNew_default","drawerWidth","toolbarIcon","Object","objectSpread","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","whiteSpace","drawerPaperClose","defineProperty","overflowX","spacing","breakpoints","up","drawerSmallScreenSpacer","minWidth","drawerSmallScreen","withRouter","AppMenuTooltip","tooltipProps","Fragment","children","Tooltip","placement","smallScreen","measure","window","innerWidth","height","innerHeight","_useState","useState","_useState2","slicedToArray","dimension","setDimension","useEffect","onResize","addEventListener","removeEventListener","useWindowDimension","Drawer","paper","open","ChevronLeft_default","Divider","List","ListItem","button","history","push","ListItemIcon","Dashboard_default","ListItemText","primary","Help_default","LearnMorePage","React","lazy","__webpack_require__","e","then","bind","ListPage","NotFoundPage","root","appBarSpacer","content","overflow","AuthentificatedApp","setDrawerOpened","token","handle","Api","refreshTodosAction","notifyAction","NotificationLevel","Error","CssBaseline","s","authentificated_AuthentificatedMenu","react_router","exact","path","component"],"mappings":"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","file":"static/js/5.42b2f211.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { tryLogoutAction } from '../../redux/actions/authentication';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { TodoState } from '../../redux/reducers/todolist';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\ntype Props = { drawerOpened: boolean; toggleDrawer: () => void };\r\n\r\nexport default function AuthentificatedHeader(props: Props) {\r\n  const classes = useStyles();\r\n  const username = useSelector((state: ReduxState) => state.authentication.username);\r\n  const ready = useSelector((state: ReduxState) => state.todolist.ready);\r\n  const todos = useSelector((state: ReduxState) => state.todolist.todos);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <AppBar position=\"absolute\" className={clsx(classes.appBar, props.drawerOpened && classes.appBarShift)}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"Toggle drawer\"\r\n          onClick={() => props.toggleDrawer()}\r\n          className={clsx(props.drawerOpened && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Welcome {username}\r\n        </Typography>\r\n        <IconButton>\r\n          <Badge\r\n            badgeContent={ready ? `${todos.filter(t => t.state !== TodoState.Remove).length}` : '?'}\r\n            color=\"primary\"\r\n          >\r\n            <ShoppingCartIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => {\r\n            dispatch(tryLogoutAction());\r\n          }}\r\n        >\r\n          <PowerSettingsNewIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { useWindowDimension } from '../../hook/WindowDimension';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  drawerSmallScreenSpacer: {\r\n    minWidth: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: theme.spacing(9)\r\n    }\r\n  },\r\n  drawerSmallScreen: {\r\n    position: 'absolute'\r\n  }\r\n}));\r\n\r\ntype Props = { drawerOpened: boolean; toggleDrawer: () => void } & RouteComponentProps;\r\n\r\nfunction AuthentificatedMenu(props: Props) {\r\n  const classes = useStyles();\r\n  const { width } = useWindowDimension();\r\n\r\n  const AppMenuTooltip = (tooltipProps: { title: string; children: ReactElement }) => {\r\n    if (props.drawerOpened) {\r\n      return <>{tooltipProps.children}</>;\r\n    }\r\n    return (\r\n      <Tooltip title={tooltipProps.title} placement=\"right\">\r\n        {tooltipProps.children}\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  const smallScreen = width < 2 * drawerWidth;\r\n\r\n  return (\r\n    <>\r\n      {smallScreen && <div className={classes.drawerSmallScreenSpacer}></div>}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(\r\n            classes.drawerPaper,\r\n            !props.drawerOpened && classes.drawerPaperClose,\r\n            smallScreen && classes.drawerSmallScreen\r\n          )\r\n        }}\r\n        open={props.drawerOpened}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={() => props.toggleDrawer()}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <AppMenuTooltip title=\"Todos\">\r\n            <ListItem button onClick={() => props.history.push('/')}>\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Todos\" />\r\n            </ListItem>\r\n          </AppMenuTooltip>\r\n          <AppMenuTooltip title=\"Learn more\">\r\n            <ListItem button onClick={() => props.history.push('/learn-more')}>\r\n              <ListItemIcon>\r\n                <HelpIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Learn more\" />\r\n            </ListItem>\r\n          </AppMenuTooltip>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(AuthentificatedMenu);\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport function useWindowDimension() {\r\n  const measure = () => ({ width: window.innerWidth, height: window.innerHeight });\r\n  const [dimension, setDimension] = useState(() => measure());\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setDimension(measure());\r\n    };\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n  return dimension;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AuthentificatedHeader from './AuthentificatedHeader';\r\nimport AppMenu from './AuthentificatedMenu';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport * as Api from '../../api';\r\nimport { NotificationLevel } from '../../redux/reducers/notification';\r\nimport { notifyAction } from '../../redux/actions/notification';\r\nimport { tryLogoutAction } from '../../redux/actions/authentication';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { refreshTodosAction } from '../../redux/actions/todolist';\r\n\r\nconst LearnMorePage = React.lazy(() => import('./learn-more/LearnMorePage'));\r\nconst ListPage = React.lazy(() => import('./list/ListPage'));\r\nconst NotFoundPage = React.lazy(() => import('./not-found/NotFoundPage'));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n    height: '100vh',\r\n    padding: '2em'\r\n  }\r\n}));\r\n\r\ntype Props = {};\r\n\r\nexport default function AuthentificatedApp(props: Props) {\r\n  const classes = useStyles();\r\n  const [drawerOpened, setDrawerOpened] = useState(false);\r\n  const token = useSelector((state: ReduxState) => state.authentication.token);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const handle = Api.addTodoListener(\r\n      token,\r\n      todos => dispatch(refreshTodosAction(todos)),\r\n      () => {\r\n        dispatch(notifyAction('Revoked token, connection lost', NotificationLevel.Error));\r\n        dispatch(tryLogoutAction(true));\r\n      }\r\n    );\r\n    return () => Api.removeTodoListener(handle);\r\n  }, [token, dispatch]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AuthentificatedHeader drawerOpened={drawerOpened} toggleDrawer={() => setDrawerOpened(s => !s)} />\r\n      <AppMenu drawerOpened={drawerOpened} toggleDrawer={() => setDrawerOpened(s => !s)} />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer}></div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ListPage} />\r\n          <Route exact path=\"/learn-more\" component={LearnMorePage} />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}