{"version":3,"sources":["redux/reducers/authentication.ts","redux/reducers/index.ts","redux/sagas/authentication.ts","redux/sagas/todolist.ts","redux/sagas/index.ts","redux/store.ts","hoc/Authentificated.tsx","component/login/LoginPage.tsx","component/Notifier.tsx","App.tsx","serviceWorker.ts","index.tsx","redux/actions/authentication.ts","redux/reducers/notification.ts","redux/actions/todolist.ts","redux/actions/notification.ts","api/index.ts","redux/reducers/todolist.ts"],"names":["AuthentificationState","initialState","username","token","state","NonAuthentificated","combined","combineReducers","authentication","arguments","length","undefined","action","type","AUTHENTICATION_LOGIN_SUCCESS","_action$payload","payload","Object","objectSpread","Authentificated","AUTHENTICATION_LOGIN_FAILURE","AUTHENTICATION_LOGIN_ON_GOING","OnGoingAuthentification","notification","todolist","tryLoginByCreds","tryLoginByToken","logout","rootAuthenticationSaga","persistTokens","Api","password","tokens","regenerator_default","a","wrap","_context","prev","next","put","loginOnGoingAction","call","sent","loginSuccessAction","notifyAction","NotificationLevel","Success","t0","loginFailureAction","Error","stop","_marked","_context2","abrupt","_marked2","silent","_context3","_marked3","_context4","takeEvery","AUTHENTICATION_TRY_LOGIN_BY_CREDS","AUTHENTICATION_TRY_LOGIN_BY_TOKEN","AUTHENTICATION_LOGOUT","_marked4","tryAddTodo","tryToggleTodo","tryRemoveTodo","rootTodolistSaga","guid","task","todo","done","addOrEditTodoAction","TodoState","Add","concat","removeTodoAction","Noop","todolist_marked","_action$payload2","todos","prevTodo","select","find","t","data","Edit","todolist_marked2","_action$payload3","Remove","todolist_marked3","TODOLIST_TRY_ADD_TODO","TODOLIST_TRY_TOGGLE_TODO","TODOLIST_TRY_REMOVE_TODO","todolist_marked4","rootSaga","delegateYield","rootTodoListSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","AuthentificationWrapper","props","useSelector","react_default","createElement","react_router","to","pathname","search","encodeURIComponent","location","react","fallback","CircularProgress","children","withAuthentificated","WrappedComponent","Wrapper","withRouter","useStyles","makeStyles","cardContainer","padding","textAlign","card","display","maxWidth","hint","fontSize","media","height","classes","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","setPassword","canLogin","onGoingLogin","redirect","URLSearchParams","get","className","Card","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","TextField","label","value","onChange","p","currentTarget","onKeyPress","ev","which","tryLoginByCredsAction","preventDefault","CardActions","Button","disabled","onClick","size","Fragment","withSnackbar","enqueueSnackbar","onGoingNotifications","setOnGoingNotifications","notifications","useEffect","computeVariant","level","Info","Warn","Log","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","n","id","o","defineProperty","message","onClose","_n$id","objectWithoutProperties","map","_toPropertyKey","removeNotifyAction","_iterator","Symbol","iterator","err","return","loadAuthentificatedApp","Promise","all","__webpack_require__","e","then","bind","AuthentificatedApp","React","lazy","App","tryLoginByTokenAction","build","maxSnack","component_Notifier","react_router_dom","exact","path","LoginPage","Boolean","hostname","match","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","tryLogoutAction","NOTIFICATION_ADD","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_saga_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_saga_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","NOTIFICATION_REMOVE","filter","TODOLIST_ADD_OR_EDIT_TODO","TODOLIST_REMOVE_TODO","TODOLIST_REFRESH_TODOS","tryAddTodoAction","tryToggleTodoAction","tryRemoveTodoAction","refreshTodosAction","Math","random","toString","substr","getValidToken","validToken","login","failure","success","checkToken","readStorage","space","keyName","localStorage","getItem","writeStorage","setItem","clearStorage","removeItem","readTodos","raw","JSON","parse","addTodoListener","fn","connectionLost","handle","_i","detectChanges","_handleId","newData","_data","some","idx","t1","t2","changeDetected","setTimeout","removeTodoListener","clearTimeout","addTodo","_ref","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_saga_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_saga_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","delay","stringify","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_saga_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","_x","_x2","apply","this","editTodo","_ref2","_callee2","_x3","_x4","removeTodo","_ref3","_callee3","_x5","_x6","ms","resolve","reject","out","todoState","newTodos","foundTodo","push","todosBeingAdded","reduce","acc","_home_travis_build_dubzzz_todolist_front_todolist_react_redux_saga_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","todosBeingEdited","todosBeingRemoved"],"mappings":"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","file":"static/js/main.95358c30.chunk.js","sourcesContent":["import {\r\n  Actions,\r\n  AUTHENTICATION_LOGIN_SUCCESS,\r\n  AUTHENTICATION_LOGIN_FAILURE,\r\n  AUTHENTICATION_LOGIN_ON_GOING\r\n} from '../actions/authentication';\r\n\r\nexport enum AuthentificationState {\r\n  NonAuthentificated = 'NonAuthentificated',\r\n  OnGoingAuthentification = 'OnGoingAuthentification',\r\n  Authentificated = 'Authentificated'\r\n}\r\n\r\nexport type AuthenticationState = {\r\n  username: string;\r\n  token: string;\r\n  state: AuthentificationState;\r\n};\r\nconst initialState: AuthenticationState = {\r\n  username: '',\r\n  token: '',\r\n  state: AuthentificationState.NonAuthentificated\r\n};\r\n\r\nexport default function(state = initialState, action: Actions) {\r\n  switch (action.type) {\r\n    case AUTHENTICATION_LOGIN_SUCCESS: {\r\n      const { username, token } = action.payload;\r\n      return { ...state, username, token, state: AuthentificationState.Authentificated };\r\n    }\r\n    case AUTHENTICATION_LOGIN_FAILURE: {\r\n      return { ...state, state: AuthentificationState.NonAuthentificated };\r\n    }\r\n    case AUTHENTICATION_LOGIN_ON_GOING: {\r\n      return { ...state, state: AuthentificationState.OnGoingAuthentification };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, Reducer } from 'redux';\r\nimport authentication from './authentication';\r\nimport notification from './notification';\r\nimport todolist from './todolist';\r\n\r\nconst combined = combineReducers({ authentication, notification, todolist });\r\nexport default combined;\r\nexport type ReduxState = (typeof combined) extends Reducer<infer U> ? U : never;\r\n","import { SagaIterator } from 'redux-saga';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport * as Api from '../../api';\r\n\r\nimport {\r\n  AUTHENTICATION_TRY_LOGIN_BY_CREDS,\r\n  ActionTryLoginByCreds,\r\n  loginOnGoingAction,\r\n  loginSuccessAction,\r\n  loginFailureAction,\r\n  ActionTryLoginByToken,\r\n  AUTHENTICATION_TRY_LOGIN_BY_TOKEN,\r\n  ActionLogout,\r\n  AUTHENTICATION_LOGOUT\r\n} from '../actions/authentication';\r\nimport { NotificationLevel } from '../reducers/notification';\r\nimport { notifyAction } from '../actions/notification';\r\n\r\nfunction persistTokens(username: string, token: string) {\r\n  Api.writeStorage('AuthentificationProvider', 'username', username);\r\n  Api.writeStorage('AuthentificationProvider', 'token', token);\r\n}\r\n\r\nfunction* tryLoginByCreds(action: ActionTryLoginByCreds) {\r\n  const { username, password } = action.payload;\r\n  yield put(loginOnGoingAction());\r\n  try {\r\n    const tokens: Api.LoginSuccess = yield call(() => Api.login(username, password));\r\n    persistTokens(tokens.username, tokens.token);\r\n    yield put(loginSuccessAction(tokens.username, tokens.token));\r\n    yield put(notifyAction('Login successful', NotificationLevel.Success));\r\n  } catch (err) {\r\n    yield put(loginFailureAction());\r\n    yield put(notifyAction('Login failure', NotificationLevel.Error));\r\n  }\r\n}\r\n\r\nfunction* tryLoginByToken(action: ActionTryLoginByToken) {\r\n  const username = Api.readStorage('AuthentificationProvider', 'username');\r\n  const token = Api.readStorage('AuthentificationProvider', 'token');\r\n  if (token === '') return;\r\n\r\n  yield put(loginOnGoingAction());\r\n\r\n  const success: boolean = yield call(() => Api.checkToken(token));\r\n  if (success) {\r\n    persistTokens(username, token);\r\n    yield put(loginSuccessAction(username, token));\r\n    yield put(notifyAction('Login successful', NotificationLevel.Success));\r\n  } else yield put(loginFailureAction());\r\n}\r\n\r\nfunction* logout(action: ActionLogout) {\r\n  const { silent } = action.payload;\r\n  Api.clearStorage('AuthentificationProvider', 'username');\r\n  Api.clearStorage('AuthentificationProvider', 'token');\r\n  yield put(loginFailureAction());\r\n  if (!silent) put(notifyAction('Logout successful', NotificationLevel.Success));\r\n}\r\n\r\nexport default function* rootAuthenticationSaga(): SagaIterator {\r\n  yield takeEvery(AUTHENTICATION_TRY_LOGIN_BY_CREDS, tryLoginByCreds);\r\n  yield takeEvery(AUTHENTICATION_TRY_LOGIN_BY_TOKEN, tryLoginByToken);\r\n  yield takeEvery(AUTHENTICATION_LOGOUT, logout);\r\n}\r\n","import { SagaIterator } from 'redux-saga';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport * as Api from '../../api';\r\nimport { NotificationLevel } from '../reducers/notification';\r\nimport { notifyAction } from '../actions/notification';\r\nimport {\r\n  TODOLIST_TRY_ADD_TODO,\r\n  TODOLIST_TRY_REMOVE_TODO,\r\n  TODOLIST_TRY_TOGGLE_TODO,\r\n  ActionTryAddTodo,\r\n  addOrEditTodoAction,\r\n  removeTodoAction,\r\n  ActionTryRemoveTodo\r\n} from '../actions/todolist';\r\nimport { TodoState, TodoType } from '../reducers/todolist';\r\nimport { ReduxState } from '../reducers';\r\n\r\nfunction* tryAddTodo(action: ActionTryAddTodo) {\r\n  const { token, guid, task } = action.payload;\r\n\r\n  const todo = { guid, task, done: false };\r\n  yield put(addOrEditTodoAction(todo, TodoState.Add));\r\n  try {\r\n    const r: boolean = yield call(() => Api.addTodo(token, todo));\r\n    if (!r) {\r\n      yield put(notifyAction(`Failed to add todo: ${todo.task}`, NotificationLevel.Error));\r\n      yield put(removeTodoAction(todo.guid));\r\n    } else {\r\n      // We apply the modification\r\n      yield put(addOrEditTodoAction(todo, TodoState.Noop));\r\n    }\r\n  } catch (err) {}\r\n}\r\n\r\nfunction* tryToggleTodo(action: ActionTryRemoveTodo) {\r\n  const { token, guid } = action.payload;\r\n\r\n  const todos: TodoType[] = yield select((state: ReduxState) => state.todolist.todos);\r\n  const prevTodo = todos.find(t => t.data.guid === guid && t.state === TodoState.Noop);\r\n  if (!prevTodo) {\r\n    yield put(notifyAction(`No todo available for modification given guid ${guid}`, NotificationLevel.Error));\r\n    return;\r\n  }\r\n  const todo = { ...prevTodo.data, done: !prevTodo.data.done };\r\n  yield put(addOrEditTodoAction(todo, TodoState.Edit));\r\n\r\n  try {\r\n    const r: boolean = yield call(() => Api.editTodo(token, prevTodo.data));\r\n    if (!r) {\r\n      yield put(notifyAction(`Failed to edit todo: ${prevTodo.data.task}`, NotificationLevel.Error));\r\n      yield put(addOrEditTodoAction(prevTodo.data, prevTodo.state));\r\n    } else {\r\n      // We apply the modification\r\n      yield put(addOrEditTodoAction(todo, TodoState.Noop));\r\n    }\r\n  } catch (err) {}\r\n}\r\n\r\nfunction* tryRemoveTodo(action: ActionTryRemoveTodo) {\r\n  const { token, guid } = action.payload;\r\n\r\n  const todos: TodoType[] = yield select((state: ReduxState) => state.todolist.todos);\r\n  const prevTodo = todos.find(t => t.data.guid === guid && t.state === TodoState.Noop);\r\n  if (!prevTodo) {\r\n    yield put(notifyAction(`No todo available for modification given guid ${guid}`, NotificationLevel.Error));\r\n    return;\r\n  }\r\n  yield put(addOrEditTodoAction(prevTodo.data, TodoState.Remove));\r\n\r\n  try {\r\n    const r: boolean = yield call(() => Api.removeTodo(token, prevTodo.data));\r\n    if (!r) {\r\n      yield put(notifyAction(`Failed to remove todo: ${prevTodo.data.task}`, NotificationLevel.Error));\r\n      yield put(addOrEditTodoAction(prevTodo.data, prevTodo.state));\r\n    } else {\r\n      // We apply the modification\r\n      yield put(removeTodoAction(prevTodo.data.guid));\r\n    }\r\n  } catch (err) {}\r\n}\r\n\r\nexport default function* rootTodolistSaga(): SagaIterator {\r\n  yield takeEvery(TODOLIST_TRY_ADD_TODO, tryAddTodo);\r\n  yield takeEvery(TODOLIST_TRY_TOGGLE_TODO, tryToggleTodo);\r\n  yield takeEvery(TODOLIST_TRY_REMOVE_TODO, tryRemoveTodo);\r\n}\r\n","import { SagaIterator } from 'redux-saga';\r\nimport rootAuthenticationSaga from './authentication';\r\nimport rootTodoListSaga from './todolist';\r\n\r\nexport default function* rootSaga(): SagaIterator {\r\n  yield* rootAuthenticationSaga();\r\n  yield* rootTodoListSaga();\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React, { Suspense } from 'react';\r\nimport { Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { AuthentificationState } from '../redux/reducers/authentication';\r\nimport { ReduxState } from '../redux/reducers';\r\n\r\ntype Props = { children: JSX.Element | JSX.Element[] } & RouteComponentProps;\r\n\r\nfunction AuthentificationWrapper(props: Props) {\r\n  const state = useSelector((state: ReduxState) => state.authentication.state);\r\n  switch (state) {\r\n    case AuthentificationState.OnGoingAuthentification:\r\n    case AuthentificationState.NonAuthentificated:\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/login',\r\n            search: `?redirect=${encodeURIComponent(props.location.pathname)}`\r\n          }}\r\n        />\r\n      );\r\n    case AuthentificationState.Authentificated:\r\n      return <Suspense fallback={<CircularProgress />}>{props.children}</Suspense>;\r\n  }\r\n}\r\n\r\nexport function withAuthentificated<P>(WrappedComponent: React.ComponentType<P>): React.ComponentType<P> {\r\n  const Wrapper = withRouter(AuthentificationWrapper);\r\n  return (props: P) => (\r\n    <Wrapper>\r\n      <WrappedComponent {...props} />\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { ReduxState } from '../../redux/reducers';\r\nimport { AuthentificationState } from '../../redux/reducers/authentication';\r\nimport { tryLoginByCredsAction } from '../../redux/actions/authentication';\r\n\r\nconst useStyles = makeStyles({\r\n  cardContainer: {\r\n    padding: 20,\r\n    textAlign: 'center'\r\n  },\r\n  card: {\r\n    display: 'inline-block',\r\n    maxWidth: 345\r\n  },\r\n  hint: {\r\n    fontSize: 12\r\n  },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\ntype Props = {} & RouteComponentProps;\r\n\r\nfunction LoginPage(props: Props) {\r\n  const classes = useStyles();\r\n  const state = useSelector((state: ReduxState) => state.authentication.state);\r\n  const dispatch = useDispatch();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const canLogin = state === AuthentificationState.NonAuthentificated && username && password;\r\n  const onGoingLogin = state === AuthentificationState.OnGoingAuthentification;\r\n\r\n  if (state === AuthentificationState.Authentificated) {\r\n    const params = new URLSearchParams(props.location.search);\r\n    const redirect = params.get('redirect') || '/';\r\n    return <Redirect to={redirect} />;\r\n  }\r\n  return (\r\n    <div className={classes.cardContainer}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://upload.wikimedia.org/wikipedia/commons/f/f6/Eiffel_Tower_and_the_Trocadero%2C_Exposition_Universal%2C_1900%2C_Paris%2C_France.jpg\"\r\n          title=\"Eiffel Tower\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Welcome to TodoList React with redux-saga\r\n          </Typography>\r\n          <Typography className={classes.hint} color=\"textSecondary\" gutterBottom>\r\n            Try with password: “password”\r\n          </Typography>\r\n          <TextField\r\n            label=\"Username\"\r\n            value={username}\r\n            onChange={p => setUsername(p.currentTarget.value)}\r\n            onKeyPress={ev => {\r\n              if (ev.which === 13 && canLogin) {\r\n                dispatch(tryLoginByCredsAction(username, password));\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n          <br />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={p => setPassword(p.currentTarget.value)}\r\n            onKeyPress={ev => {\r\n              if (ev.which === 13 && canLogin) {\r\n                dispatch(tryLoginByCredsAction(username, password));\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!canLogin}\r\n            onClick={() => dispatch(tryLoginByCredsAction(username, password))}\r\n          >\r\n            Login\r\n          </Button>\r\n          {onGoingLogin ? <CircularProgress size={24} /> : <></>}\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import { useEffect, useState } from 'react';\r\nimport { withSnackbar, WithSnackbarProps } from 'notistack';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ReduxState } from '../redux/reducers';\r\nimport { NotificationLevel } from '../redux/reducers/notification';\r\nimport { removeNotifyAction } from '../redux/actions/notification';\r\n\r\nfunction Notifier<TProps extends WithSnackbarProps>(props: TProps) {\r\n  const { enqueueSnackbar } = props;\r\n  const [onGoingNotifications, setOnGoingNotifications] = useState({} as { [id: string]: true });\r\n  const notifications = useSelector((state: ReduxState) => state.notification.notifications);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const computeVariant = (level: NotificationLevel) => {\r\n      switch (level) {\r\n        case NotificationLevel.Success:\r\n          return 'success';\r\n        case NotificationLevel.Info:\r\n          return 'info';\r\n        case NotificationLevel.Warn:\r\n          return 'warning';\r\n        case NotificationLevel.Error:\r\n          return 'error';\r\n        case NotificationLevel.Log:\r\n        default:\r\n          return 'default';\r\n      }\r\n    };\r\n    for (const n of notifications) {\r\n      if (onGoingNotifications[n.id]) continue;\r\n\r\n      setOnGoingNotifications(o => ({ ...o, [n.id]: true }));\r\n      enqueueSnackbar(n.message, {\r\n        variant: computeVariant(n.level),\r\n        onClose: () => {\r\n          setOnGoingNotifications(o => {\r\n            const { [n.id]: nid, ...others } = o;\r\n            return others;\r\n          });\r\n        }\r\n      });\r\n      dispatch(removeNotifyAction(n.id));\r\n    }\r\n  }, [notifications, onGoingNotifications, dispatch, enqueueSnackbar]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default withSnackbar(Notifier);\r\n","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { withAuthentificated } from './hoc/Authentificated';\nimport LoginPage from './component/login/LoginPage';\nimport { tryLoginByTokenAction } from './redux/actions/authentication';\nimport Notifier from './component/Notifier';\nimport { SnackbarProvider } from 'notistack';\n\nconst loadAuthentificatedApp = () => import('./component/authentificated/AuthentificatedApp');\nconst AuthentificatedApp = React.lazy(loadAuthentificatedApp);\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    loadAuthentificatedApp();\n  }, []);\n\n  useEffect(() => {\n    dispatch(tryLoginByTokenAction());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <SnackbarProvider maxSnack={3}>\n        <Notifier />\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route component={withAuthentificated(AuthentificatedApp)} />\n          </Switch>\n        </Router>\n      </SnackbarProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// types\r\nexport const AUTHENTICATION_TRY_LOGIN_BY_TOKEN = 'AUTHENTICATION_TRY_LOGIN_BY_TOKEN';\r\nexport const AUTHENTICATION_TRY_LOGIN_BY_CREDS = 'AUTHENTICATION_TRY_LOGIN_BY_CREDS';\r\nexport const AUTHENTICATION_LOGIN_SUCCESS = 'AUTHENTICATION_LOGIN_SUCCESS';\r\nexport const AUTHENTICATION_LOGIN_FAILURE = 'AUTHENTICATION_LOGIN_FAILURE';\r\nexport const AUTHENTICATION_LOGIN_ON_GOING = 'AUTHENTICATION_LOGIN_ON_GOING';\r\nexport const AUTHENTICATION_LOGOUT = 'AUTHENTICATION_LOGOUT';\r\n\r\n// actions\r\nexport const tryLoginByTokenAction = () =>\r\n  ({\r\n    type: AUTHENTICATION_TRY_LOGIN_BY_TOKEN,\r\n    payload: {}\r\n  } as const);\r\nexport const tryLoginByCredsAction = (username: string, password: string) =>\r\n  ({\r\n    type: AUTHENTICATION_TRY_LOGIN_BY_CREDS,\r\n    payload: { username, password }\r\n  } as const);\r\nexport const tryLogoutAction = (silent?: boolean) =>\r\n  ({\r\n    type: AUTHENTICATION_LOGOUT,\r\n    payload: { silent }\r\n  } as const);\r\nexport const loginSuccessAction = (username: string, token: string) =>\r\n  ({\r\n    type: AUTHENTICATION_LOGIN_SUCCESS,\r\n    payload: { username, token }\r\n  } as const);\r\nexport const loginFailureAction = () =>\r\n  ({\r\n    type: AUTHENTICATION_LOGIN_FAILURE,\r\n    payload: {}\r\n  } as const);\r\nexport const loginOnGoingAction = () =>\r\n  ({\r\n    type: AUTHENTICATION_LOGIN_ON_GOING,\r\n    payload: {}\r\n  } as const);\r\n\r\nexport type ActionTryLoginByToken = ReturnType<typeof tryLoginByTokenAction>;\r\nexport type ActionTryLoginByCreds = ReturnType<typeof tryLoginByCredsAction>;\r\nexport type ActionLoginSuccess = ReturnType<typeof loginSuccessAction>;\r\nexport type ActionLoginFailure = ReturnType<typeof loginFailureAction>;\r\nexport type ActionLoginOnGoing = ReturnType<typeof loginOnGoingAction>;\r\nexport type ActionLogout = ReturnType<typeof tryLogoutAction>;\r\nexport type Actions =\r\n  | ActionTryLoginByToken\r\n  | ActionTryLoginByCreds\r\n  | ActionLoginSuccess\r\n  | ActionLoginFailure\r\n  | ActionLoginOnGoing\r\n  | ActionLogout;\r\n","import { NOTIFICATION_ADD, NOTIFICATION_REMOVE } from '../actions/notification';\r\nimport { Actions } from '../actions/notification';\r\n\r\nexport enum NotificationLevel {\r\n  Log = 'Log',\r\n  Success = 'Success',\r\n  Info = 'Info',\r\n  Warn = 'Warn',\r\n  Error = 'Error'\r\n}\r\nexport type NotificationState = {\r\n  notifications: { id: string; message: string; level: NotificationLevel }[];\r\n};\r\nconst initialState: NotificationState = {\r\n  notifications: []\r\n};\r\n\r\nexport default (state = initialState, action: Actions) => {\r\n  switch (action.type) {\r\n    case NOTIFICATION_ADD: {\r\n      const { id, message, level } = action.payload;\r\n      return {\r\n        ...state,\r\n        notifications: [\r\n          ...state.notifications,\r\n          {\r\n            id,\r\n            message,\r\n            level\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case NOTIFICATION_REMOVE: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(n => n.id !== id)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as Api from '../../api';\r\nimport { TodoState } from '../reducers/todolist';\r\n\r\n// types\r\nexport const TODOLIST_TRY_ADD_TODO = 'TODOLIST_TRY_ADD_TODO';\r\nexport const TODOLIST_TRY_TOGGLE_TODO = 'TODOLIST_TRY_TOGGLE_TODO';\r\nexport const TODOLIST_TRY_REMOVE_TODO = 'TODOLIST_TRY_REMOVE_TODO';\r\nexport const TODOLIST_ADD_OR_EDIT_TODO = 'TODOLIST_ADD_OR_EDIT_TODO';\r\nexport const TODOLIST_REMOVE_TODO = 'TODOLIST_REMOVE_TODO';\r\nexport const TODOLIST_REFRESH_TODOS = 'TODOLIST_REFRESH_TODOS';\r\n\r\n// actions\r\nexport const tryAddTodoAction = (token: string, task: string) =>\r\n  ({\r\n    type: TODOLIST_TRY_ADD_TODO,\r\n    payload: {\r\n      token,\r\n      guid: Math.random()\r\n        .toString(16)\r\n        .substr(2),\r\n      task\r\n    }\r\n  } as const);\r\nexport const tryToggleTodoAction = (token: string, guid: string) =>\r\n  ({\r\n    type: TODOLIST_TRY_TOGGLE_TODO,\r\n    payload: { token, guid }\r\n  } as const);\r\nexport const tryRemoveTodoAction = (token: string, guid: string) =>\r\n  ({\r\n    type: TODOLIST_TRY_REMOVE_TODO,\r\n    payload: { token, guid }\r\n  } as const);\r\nexport const addOrEditTodoAction = (todo: Api.Todo, state: TodoState) =>\r\n  ({\r\n    type: TODOLIST_ADD_OR_EDIT_TODO,\r\n    payload: { todo, state }\r\n  } as const);\r\nexport const removeTodoAction = (guid: string) =>\r\n  ({\r\n    type: TODOLIST_REMOVE_TODO,\r\n    payload: { guid }\r\n  } as const);\r\nexport const refreshTodosAction = (todos: Api.Todo[]) =>\r\n  ({\r\n    type: TODOLIST_REFRESH_TODOS,\r\n    payload: { todos }\r\n  } as const);\r\n\r\nexport type ActionTryAddTodo = ReturnType<typeof tryAddTodoAction>;\r\nexport type ActionTryToggleTodo = ReturnType<typeof tryToggleTodoAction>;\r\nexport type ActionTryRemoveTodo = ReturnType<typeof tryRemoveTodoAction>;\r\nexport type ActionAddOrEditTodo = ReturnType<typeof addOrEditTodoAction>;\r\nexport type ActionRemoveTodo = ReturnType<typeof removeTodoAction>;\r\nexport type ActionRefreshTodos = ReturnType<typeof refreshTodosAction>;\r\nexport type Actions =\r\n  | ActionTryAddTodo\r\n  | ActionTryToggleTodo\r\n  | ActionTryRemoveTodo\r\n  | ActionAddOrEditTodo\r\n  | ActionRemoveTodo\r\n  | ActionRefreshTodos;\r\n","import { NotificationLevel } from '../reducers/notification';\r\n\r\n// types\r\nexport const NOTIFICATION_ADD = 'NOTIFICATION_ADD';\r\nexport const NOTIFICATION_REMOVE = 'NOTIFICATION_REMOVE';\r\n\r\n// actions\r\nexport const notifyAction = (message: string, level: NotificationLevel) =>\r\n  ({\r\n    type: NOTIFICATION_ADD,\r\n    payload: {\r\n      id: Math.random()\r\n        .toString(16)\r\n        .substr(2),\r\n      message,\r\n      level\r\n    }\r\n  } as const);\r\nexport const removeNotifyAction = (id: string) =>\r\n  ({\r\n    type: NOTIFICATION_REMOVE,\r\n    payload: { id }\r\n  } as const);\r\n\r\nexport type ActionNotify = ReturnType<typeof notifyAction>;\r\nexport type ActionRemoveNotify = ReturnType<typeof removeNotifyAction>;\r\nexport type Actions = ActionNotify | ActionRemoveNotify;\r\n","/* Login API */\r\n\r\nexport type LoginSuccess = {\r\n  username: string;\r\n  token: string;\r\n};\r\nconst validPassword = 'password';\r\n\r\nconst getValidToken = () => {\r\n  const token = (window as any).validToken || 'w€lc0Me';\r\n  (window as any).validToken = token;\r\n  return token;\r\n};\r\n\r\nexport const login = (username: string, password: string): Promise<LoginSuccess> => {\r\n  if (password !== validPassword) return failure(500);\r\n  return success({ username, token: getValidToken() }, 500);\r\n};\r\n\r\nexport const checkToken = (token: string): Promise<boolean> => {\r\n  if (token !== getValidToken()) return success(false, 500);\r\n  return success(true, 500);\r\n};\r\n\r\n/* Storage API */\r\n\r\nexport const readStorage = (space: string, keyName: string) => {\r\n  return localStorage.getItem(`${space}::${keyName}`) || '';\r\n};\r\n\r\nexport const writeStorage = (space: string, keyName: string, value: string) => {\r\n  return localStorage.setItem(`${space}::${keyName}`, value);\r\n};\r\n\r\nexport const clearStorage = (space: string, keyName: string) => {\r\n  return localStorage.removeItem(`${space}::${keyName}`);\r\n};\r\n\r\n/* Todolist */\r\n\r\nexport type Todo = {\r\n  guid: string;\r\n  task: string;\r\n  done: boolean;\r\n};\r\nexport type TodoListenerHandle = {\r\n  _i: {\r\n    _handleId?: NodeJS.Timeout;\r\n    _data?: Todo[];\r\n  };\r\n};\r\n\r\nconst readTodos = (): Todo[] => {\r\n  const raw = readStorage('Todos', 'data');\r\n  if (!raw) return [];\r\n  return JSON.parse(raw);\r\n};\r\n\r\nexport const addTodoListener = (\r\n  token: string,\r\n  fn: (todos: Todo[]) => void,\r\n  connectionLost: () => void\r\n): TodoListenerHandle => {\r\n  const handle: TodoListenerHandle = { _i: {} };\r\n\r\n  const changeDetected = (newData: Todo[]) => {\r\n    if (handle._i._data === undefined) return true;\r\n    if (handle._i._data.length !== newData.length) return true;\r\n\r\n    const sameTodo = (t1: Todo, t2: Todo) => t1.guid === t2.guid && t1.task === t2.task && t1.done === t2.done;\r\n    if (handle._i._data.some((p, idx) => !sameTodo(p, newData[idx]))) return true;\r\n\r\n    return false;\r\n  };\r\n  const detectChanges = () => {\r\n    if (token !== getValidToken()) {\r\n      handle._i._handleId = undefined;\r\n      connectionLost();\r\n      return;\r\n    }\r\n    const newData = readTodos();\r\n    if (changeDetected(newData)) {\r\n      handle._i._data = newData;\r\n      fn(newData);\r\n    }\r\n    handle._i._handleId = setTimeout(() => detectChanges(), 500);\r\n  };\r\n\r\n  handle._i._handleId = setTimeout(() => detectChanges(), 500);\r\n  return handle;\r\n};\r\n\r\nexport const removeTodoListener = (handle: TodoListenerHandle): void => {\r\n  if (handle._i._handleId) {\r\n    clearTimeout(handle._i._handleId);\r\n  }\r\n};\r\n\r\nexport const addTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify([...data, todo]));\r\n  return true;\r\n};\r\n\r\nexport const editTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (!data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify(data.map(t => (t.guid === todo.guid ? todo : t))));\r\n  return true;\r\n};\r\n\r\nexport const removeTodo = async (token: string, todo: Todo): Promise<boolean> => {\r\n  await delay(500);\r\n  if (token !== getValidToken()) return false;\r\n\r\n  const data = readTodos();\r\n  if (!data.some(t => t.guid === todo.guid)) return false;\r\n\r\n  writeStorage('Todos', 'data', JSON.stringify(data.filter(t => t.guid !== todo.guid)));\r\n  return true;\r\n};\r\n\r\n/* Helpers */\r\n\r\nconst delay = (ms: number): Promise<void> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve(), ms);\r\n  });\r\n};\r\n\r\nconst success = <T>(out: T, ms: number): Promise<T> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => resolve(out), ms);\r\n  });\r\n};\r\n\r\nconst failure = <T>(ms: number): Promise<T> => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => reject(), ms);\r\n  });\r\n};\r\n","import { TODOLIST_ADD_OR_EDIT_TODO, TODOLIST_REMOVE_TODO, TODOLIST_REFRESH_TODOS } from '../actions/todolist';\r\nimport * as Api from '../../api';\r\nimport { Actions } from '../actions/todolist';\r\n\r\nexport enum TodoState {\r\n  Noop = 'noop',\r\n  Add = 'add',\r\n  Edit = 'edit',\r\n  Remove = 'remove'\r\n}\r\nexport type TodoType = {\r\n  data: Api.Todo;\r\n  state: TodoState;\r\n};\r\nexport type TodolistState = {\r\n  ready: boolean;\r\n  todos: TodoType[];\r\n};\r\nconst initialState: TodolistState = {\r\n  ready: false,\r\n  todos: []\r\n};\r\n\r\nexport default (state = initialState, action: Actions) => {\r\n  switch (action.type) {\r\n    case TODOLIST_ADD_OR_EDIT_TODO: {\r\n      const { todo, state: todoState } = action.payload;\r\n\r\n      const newTodos = [] as TodoType[];\r\n      let foundTodo = false;\r\n      for (const t of state.todos) {\r\n        if (t.data.guid === todo.guid) {\r\n          foundTodo = true;\r\n          newTodos.push({ data: todo, state: todoState });\r\n        } else newTodos.push(t);\r\n      }\r\n      if (!foundTodo) newTodos.push({ data: todo, state: todoState });\r\n      return { ...state, todos: newTodos };\r\n    }\r\n    case TODOLIST_REMOVE_TODO: {\r\n      const { guid } = action.payload;\r\n      return { ...state, todos: state.todos.filter(t => t.data.guid !== guid) };\r\n    }\r\n    case TODOLIST_REFRESH_TODOS: {\r\n      const { todos } = action.payload;\r\n      const todosBeingAdded: { [guid: string]: Api.Todo } = state.todos\r\n        .filter(t => t.state === TodoState.Add)\r\n        .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n      const todosBeingEdited: { [guid: string]: Api.Todo } = state.todos\r\n        .filter(t => t.state === TodoState.Edit)\r\n        .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n      const todosBeingRemoved: { [guid: string]: Api.Todo } = state.todos\r\n        .filter(t => t.state === TodoState.Remove)\r\n        .reduce((acc, t) => ({ ...acc, [t.data.guid]: t.data }), {});\r\n\r\n      return {\r\n        ...state,\r\n        ready: true,\r\n        todos: todos\r\n          .filter(t => todosBeingAdded[t.guid] === undefined)\r\n          .map(t => {\r\n            // Remove, Edit and Noop\r\n            if (todosBeingEdited[t.guid]) return { state: TodoState.Edit, data: todosBeingEdited[t.guid] };\r\n            if (todosBeingRemoved[t.guid]) return { state: TodoState.Remove, data: todosBeingRemoved[t.guid] };\r\n            return { state: TodoState.Noop, data: t };\r\n          })\r\n          .concat(state.todos.filter(t => t.state === TodoState.Add)) // Add\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"sourceRoot":""}